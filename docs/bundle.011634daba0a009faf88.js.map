{"version":3,"sources":["webpack:///bundle.011634daba0a009faf88.js","webpack:///webpack/bootstrap a7a6a7b39d949ed75a5e","webpack:///./utils.ts","webpack:///./app.common.ts","webpack:///./event-store.ts","webpack:///./~/uuid/index.js","webpack:///./domain/todo-list.ts","webpack:///./controllers/history-todo-controller.ts","webpack:///./read.ts","webpack:///./~/uuid/lib/bytesToUuid.js","webpack:///./~/uuid/lib/rng-browser.js","webpack:///./controllers/add-todo-form-controller.ts","webpack:///./controllers/body-controller.ts","webpack:///./controllers/completed-todo-list-controller.ts","webpack:///./controllers/event-list-controller.ts","webpack:///./controllers/event-list-group-controller.ts","webpack:///./controllers/event-text-controller.ts","webpack:///./controllers/history-todo-list-panel-controller.ts","webpack:///./controllers/history-todo-title-panel-controller.ts","webpack:///./controllers/incomplete-todo-list-controller.ts","webpack:///./controllers/todo-actions-panel-buttons-controller.ts","webpack:///./controllers/todo-actions-panel-controller.ts","webpack:///./controllers/todo-controller.ts","webpack:///./controllers/todo-list-controller.ts","webpack:///./controllers/todo-list-group-controller.ts","webpack:///./controllers/todo-list-panel-controller.ts","webpack:///./controllers/todo-rename-panel-controller.ts","webpack:///./controllers/todo-title-controller.ts","webpack:///./controllers/todo-title-panel-controller.ts","webpack:///./~/idb/lib/idb.js","webpack:///./app.ts","webpack:///./domain/aggregate-root.ts","webpack:///./domain/events.ts","webpack:///./domain/todo.ts","webpack:///./~/uuid/v1.js","webpack:///./~/uuid/v4.js","webpack:///(webpack)/buildin/global.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","templateClone","id","selector","template","document","querySelector","Error","importNode","content","fillControllerElements","parentNode","controllerName","newChild","elems","findControllerElements","Array","forEach","e","innerHTML","appendChild","findAllElements","fillContentElements","propName","findContentElements","textContent","setAttrElements","attrName","findAttrElements","setAttribute","findElement","element","elements","querySelectorAll","length","getRequiredAttribute","attributeName","getAttribute","refreshLists","di","todoListId","event_store_1","domainEventsByAggregate","then","events","todoList","todo_list_1","TodoList","utils_1","incompleteTodoListController","todos","completedTodoListController","completedTodos","eventListController","refreshBody","bodyController","invalidNameInputHandler","clearValidation","$form","removeClass","$button","addClass","off","validationEventNamespace","$input","input","currentTarget","$","closest","next","children","uuid_1","v4","on","validity","valid","focusOutEvent","contains","relatedTarget","todoIdDataAttrName","eventIdDataAttrName","open","idb_1","default","dbName","db","oldVersion","createObjectStore","domainEventStoreName","autoIncrement","keyPath","eventIdPropName","createIndex","aggregateIdPropName","allDomainEvents","version","cursorCallback","cursor","push","continue","tx","transaction","store","objectStore","iterateCursor","IDBKeyRange","upperBound","complete","aggregateId","event","index","postDomainEvents","x","add","DomainEventType","v1","uuid","aggregate_root_1","events_1","todo_1","AggregateRoot","this","_todos","filter","isCompleted","sort","y","completionTimestamp","[object Object]","super","init","_id","Todo","todoId","todoName","findIndex","splice","oldTodo","newTodo","CompletedTodo","todoCompletionTimestamp","todo","find","arraySwap","arr","a","incompleteTodoPositions","reduce","from","to","todoOffset","agId","applyAndStage","TodoAdded","TodoRemoved","TodoCompleted","TodoUncompleted","TodoRenamed","offset","TodoPositionChanged","historyTodoController","fragment","historyTodoTitlePanelController","todoListEvents","lists","todoLists","type","indexOf","bytesToUuid","buf","bth","byteToHex","toString","substr","global","rng","crypto","msCrypto","getRandomValues","rnds8","Uint8Array","rnds","r","Math","random","addTodoFormController","addTodoForm","addTodoInput","app_common_1","submit","preventDefault","eventsPromise","read_1","reset","uncommittedEvents","catch","console","log","todoListPanelController","createDocumentFragment","todoListController","historyDi","assign","todoController","history_todo_controller_1","eventListDelegatedEventTarget","refreshBodyEventNamespace","e2","originalEvent","which","target","eventId","historyEvents","slice","parseInt","historyTodoListPanelController","eventListGroupController","listItemFragment","eventTextController","todoTitleController","todoActionsPanelButtonsController","todoActionsPanelController","todoTitlePanelController","todoRenamePanelController","todoListGroupController","completeTodoBtnHandler","isComplete","todoActionsBtn","refreshEvents","refreshTodoList","Date","now","uncomplete","$todoListDelegatedEventTarget","val","rename","changePosition","refeshTodoList","remove","$defaultPanel","$actionsPanel","$bothPanels","actionsBtnGroup","eventNamespace","toggle","closeEvent","$renamePanel","first","focus","prev","inputId","newInputId","label","titleFragment","completionDateFragment","date","toLocaleDateString","toArray","promisifyRequest","request","Promise","resolve","reject","onsuccess","result","onerror","error","promisifyRequestCall","obj","method","args","apply","promisifyCursorRequestCall","Cursor","proxyProperties","ProxyClass","targetProp","properties","prop","set","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","_index","_cursor","_request","ObjectStore","_store","Transaction","idbTransaction","_tx","oncomplete","onabort","UpgradeDB","_db","DB","IDBIndex","IDBCursor","methodName","IDBObjectStore","IDBTransaction","IDBDatabase","funcName","replace","callback","nativeObject","getAll","query","count","instance","items","undefined","exp","upgradeCallback","indexedDB","onupgradeneeded","delete","add_todo_form_controller_1","body_controller_1","completed_todo_list_controller_1","event_list_controller_1","event_list_group_controller_1","event_text_controller_1","history_todo_list_panel_controller_1","history_todo_title_panel_controller_1","incomplete_todo_list_controller_1","todo_actions_panel_buttons_controller_1","todo_actions_panel_controller_1","todo_controller_1","todo_list_controller_1","todo_list_group_controller_1","todo_list_panel_controller_1","todo_rename_panel_controller_1","todo_title_controller_1","todo_title_panel_controller_1","window","alert","_uncommittedEvents","options","b","clockseq","_clockseq","msecs","getTime","nsecs","_lastNSecs","dt","_lastMSecs","tl","tmh","node","_nodeId","_seedBytes","ii","g","Function","eval"],"mappings":"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","file":"bundle.011634daba0a009faf88.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 29);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction templateClone(id) {\r\n    let selector = \"template#\" + id;\r\n    let template = document.querySelector(selector);\r\n    if (!template) {\r\n        throw new Error(`Document missing required '${selector}' element`);\r\n    }\r\n    let fragment = document.importNode(template.content, true);\r\n    return fragment;\r\n}\r\nexports.templateClone = templateClone;\r\nfunction fillControllerElements(parentNode, controllerName, newChild) {\r\n    let elems = findControllerElements(parentNode, controllerName);\r\n    // NodeList isn't iterable on Edge, so you can't use array.forEach()\r\n    Array.prototype.forEach.call(elems, (e) => {\r\n        e.innerHTML = \"\";\r\n        e.appendChild(newChild);\r\n    });\r\n}\r\nexports.fillControllerElements = fillControllerElements;\r\nfunction findControllerElements(parentNode, controllerName) {\r\n    let selector = `[data-estd-controller='${controllerName}']`;\r\n    return findAllElements(parentNode, selector);\r\n}\r\nfunction fillContentElements(parentNode, propName, content) {\r\n    let elems = findContentElements(parentNode, propName);\r\n    // NodeList isn't iterable on Edge, so you can't use array.forEach()\r\n    Array.prototype.forEach.call(elems, (e) => {\r\n        e.textContent = content;\r\n    });\r\n}\r\nexports.fillContentElements = fillContentElements;\r\nfunction findContentElements(parentNode, propName) {\r\n    let selector = `[data-estd-content='${propName}']`;\r\n    return findAllElements(parentNode, selector);\r\n}\r\nfunction setAttrElements(parentNode, attrName, value) {\r\n    let elems = findAttrElements(parentNode, attrName);\r\n    // NodeList isn't iterable on Edge, so you can't use array.forEach()\r\n    Array.prototype.forEach.call(elems, (e) => {\r\n        e.setAttribute(attrName, value);\r\n    });\r\n}\r\nexports.setAttrElements = setAttrElements;\r\nfunction findAttrElements(parentNode, attrName) {\r\n    let selector = `[data-estd-attr='${attrName}']`;\r\n    return findAllElements(parentNode, selector);\r\n}\r\nfunction findElement(parentNode, selector) {\r\n    let element = parentNode.querySelector(selector);\r\n    if (!element) {\r\n        throw new Error(`'${parentNode}' missing required '${selector}' element`);\r\n    }\r\n    return element;\r\n}\r\nexports.findElement = findElement;\r\nfunction findAllElements(parentNode, selector) {\r\n    let elements = parentNode.querySelectorAll(selector);\r\n    if (!elements.length) {\r\n        throw new Error(`'${parentNode}' missing required '${selector}' element`);\r\n    }\r\n    return elements;\r\n}\r\nfunction getRequiredAttribute(element, attributeName) {\r\n    let value = element.getAttribute(attributeName);\r\n    if (!value) {\r\n        throw new Error(`'${element}' missing required '${attributeName}' attribute`);\r\n    }\r\n    return value;\r\n}\r\nexports.getRequiredAttribute = getRequiredAttribute;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst uuid_1 = __webpack_require__(3);\r\nconst todo_list_1 = __webpack_require__(4);\r\nconst event_store_1 = __webpack_require__(2);\r\nconst utils_1 = __webpack_require__(0);\r\nexports.todoIdDataAttrName = \"data-estd-todo-id\";\r\nexports.eventIdDataAttrName = \"data-estd-event-id\";\r\nfunction refreshLists(di, todoListId) {\r\n    return event_store_1.domainEventsByAggregate(todoListId)\r\n        .then(events => {\r\n        let todoList = new todo_list_1.TodoList(events);\r\n        utils_1.fillControllerElements(document, \"incompleteTodoListController\", di.incompleteTodoListController(di, todoList.todos));\r\n        utils_1.fillControllerElements(document, \"completedTodoListController\", di.completedTodoListController(di, todoList.completedTodos));\r\n        utils_1.fillControllerElements(document, \"eventListController\", di.eventListController(di, events));\r\n    });\r\n}\r\nexports.refreshLists = refreshLists;\r\nfunction refreshBody(di, todoListId) {\r\n    return event_store_1.domainEventsByAggregate(todoListId)\r\n        .then(events => {\r\n        utils_1.fillControllerElements(document, \"bodyController\", di.bodyController(di, events));\r\n    });\r\n}\r\nexports.refreshBody = refreshBody;\r\nfunction invalidNameInputHandler(e) {\r\n    let input = e.currentTarget;\r\n    let $input = $(input);\r\n    let $form = $input.closest(\"form\");\r\n    let $button = $input.next().children(\"button\");\r\n    $form.addClass(\"has-error\");\r\n    $button.removeClass(\"btn-success\").addClass(\"btn-danger\");\r\n    let validationEventNamespace = \".nameTodoInputValidation:\" + uuid_1.v4();\r\n    function clearValidation() {\r\n        $form.removeClass(\"has-error\");\r\n        $button.removeClass(\"btn-danger\").addClass(\"btn-success\");\r\n        $form.off(validationEventNamespace);\r\n        $input.off(validationEventNamespace);\r\n    }\r\n    $input.on(\"input\" + validationEventNamespace, () => {\r\n        if (input.validity.valid) {\r\n            clearValidation();\r\n        }\r\n    });\r\n    $form.on(\"focusout\" + validationEventNamespace, focusOutEvent => {\r\n        if (!focusOutEvent.currentTarget.contains(focusOutEvent.relatedTarget)) {\r\n            clearValidation();\r\n        }\r\n    });\r\n}\r\nexports.invalidNameInputHandler = invalidNameInputHandler;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst idb_1 = __webpack_require__(28);\r\nvar DomainEventType;\r\n(function (DomainEventType) {\r\n    DomainEventType[DomainEventType[\"TodoAdded\"] = 0] = \"TodoAdded\";\r\n    DomainEventType[DomainEventType[\"TodoRemoved\"] = 1] = \"TodoRemoved\";\r\n    DomainEventType[DomainEventType[\"TodoCompleted\"] = 2] = \"TodoCompleted\";\r\n    DomainEventType[DomainEventType[\"TodoUncompleted\"] = 3] = \"TodoUncompleted\";\r\n    DomainEventType[DomainEventType[\"TodoRenamed\"] = 4] = \"TodoRenamed\";\r\n    DomainEventType[DomainEventType[\"TodoPositionChanged\"] = 5] = \"TodoPositionChanged\";\r\n})(DomainEventType = exports.DomainEventType || (exports.DomainEventType = {}));\r\nconst dbName = \"estd-db\";\r\nconst domainEventStoreName = \"domain-event\";\r\nconst aggregateIdPropName = \"aggregateId\";\r\nconst eventIdPropName = \"id\";\r\nfunction open() {\r\n    return idb_1.default.open(dbName, 1, db => {\r\n        switch (db.oldVersion) {\r\n            case 0:\r\n                db.createObjectStore(domainEventStoreName, { autoIncrement: true, keyPath: eventIdPropName })\r\n                    .createIndex(aggregateIdPropName, aggregateIdPropName);\r\n        }\r\n    });\r\n}\r\nfunction allDomainEvents(version) {\r\n    return open().then(db => {\r\n        let events = [];\r\n        let tx = db.transaction(domainEventStoreName);\r\n        let store = tx.objectStore(domainEventStoreName);\r\n        function cursorCallback(cursor) {\r\n            if (!cursor) {\r\n                return;\r\n            }\r\n            events.push(cursor.value);\r\n            // tslint:disable-next-line:no-floating-promises\r\n            cursor.continue();\r\n        }\r\n        // iterateCursor() should be replace with usage of openCursor() when \"idb\" decides it is safe to do so.\r\n        if (version) {\r\n            store.iterateCursor(IDBKeyRange.upperBound(version), cursorCallback);\r\n        }\r\n        else {\r\n            store.iterateCursor(cursorCallback);\r\n        }\r\n        return tx.complete.then(() => events);\r\n    });\r\n}\r\nexports.allDomainEvents = allDomainEvents;\r\nfunction domainEventsByAggregate(aggregateId, version) {\r\n    return open().then(db => {\r\n        let events = [];\r\n        let tx = db.transaction(domainEventStoreName);\r\n        let index = tx.objectStore(domainEventStoreName).index(aggregateIdPropName);\r\n        function cursorCallback(cursor) {\r\n            if (!cursor) {\r\n                return;\r\n            }\r\n            let event = cursor.value;\r\n            if (!version || event.id <= version) {\r\n                events.push(event);\r\n            }\r\n            // tslint:disable-next-line:no-floating-promises\r\n            cursor.continue();\r\n        }\r\n        // iterateCursor() should be replace with usage of openCursor() when \"idb\" decides it is safe to do so.\r\n        index.iterateCursor(cursorCallback);\r\n        return tx.complete.then(() => events);\r\n    });\r\n}\r\nexports.domainEventsByAggregate = domainEventsByAggregate;\r\nfunction postDomainEvents(events) {\r\n    return open().then(db => {\r\n        let tx = db.transaction(domainEventStoreName, \"readwrite\");\r\n        let store = tx.objectStore(domainEventStoreName);\r\n        events.forEach(x => store.add(x));\r\n        return tx.complete;\r\n    });\r\n}\r\nexports.postDomainEvents = postDomainEvents;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar v1 = __webpack_require__(33);\nvar v4 = __webpack_require__(34);\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst uuid_1 = __webpack_require__(3);\r\nconst aggregate_root_1 = __webpack_require__(30);\r\nconst events_1 = __webpack_require__(31);\r\nconst todo_1 = __webpack_require__(32);\r\nclass TodoList extends aggregate_root_1.AggregateRoot {\r\n    get todos() {\r\n        return this._todos.filter(x => !x.isCompleted);\r\n    }\r\n    get completedTodos() {\r\n        return this._todos.filter(x => x.isCompleted)\r\n            .sort((x, y) => y.completionTimestamp - x.completionTimestamp);\r\n    }\r\n    init() {\r\n        super.init();\r\n        this._todos = [];\r\n    }\r\n    // Domain Event Handlers\r\n    TodoAdded(e) {\r\n        if (!this.id) {\r\n            this._id = e.aggregateId;\r\n        }\r\n        this._todos.push(new todo_1.Todo(e.todoId, e.todoName));\r\n    }\r\n    TodoRemoved(e) {\r\n        let i = this._todos.findIndex(x => x.id === e.todoId);\r\n        if (i !== -1) {\r\n            this._todos.splice(i, 1);\r\n        }\r\n    }\r\n    TodoCompleted(e) {\r\n        let i = this._todos.findIndex(x => x.id === e.todoId);\r\n        if (i !== -1) {\r\n            let oldTodo = this._todos[i];\r\n            let newTodo = new todo_1.CompletedTodo(oldTodo.id, oldTodo.name, e.todoCompletionTimestamp);\r\n            this._todos[i] = newTodo;\r\n        }\r\n    }\r\n    TodoUncompleted(e) {\r\n        let i = this._todos.findIndex(x => x.id === e.todoId);\r\n        if (i !== -1) {\r\n            let oldTodo = this._todos[i];\r\n            let newTodo = new todo_1.Todo(oldTodo.id, oldTodo.name);\r\n            this._todos[i] = newTodo;\r\n        }\r\n    }\r\n    TodoRenamed(e) {\r\n        let todo = this._todos.find(x => x.id === e.todoId);\r\n        if (todo) {\r\n            todo.name = e.todoName;\r\n        }\r\n    }\r\n    TodoPositionChanged(e) {\r\n        let incompleteTodoPositions = this._todos.reduce((p, c, i) => {\r\n            if (!c.isCompleted) {\r\n                p.push(i);\r\n            }\r\n            return p;\r\n        }, []);\r\n        let from = incompleteTodoPositions.findIndex(x => this._todos[x].id === e.todoId);\r\n        if (from === -1) {\r\n            return;\r\n        }\r\n        let to = from + e.todoOffset;\r\n        if (to < 0) {\r\n            to = 0;\r\n        }\r\n        else if (to > incompleteTodoPositions.length - 1) {\r\n            to = incompleteTodoPositions.length - 1;\r\n        }\r\n        if (from === to) {\r\n            return;\r\n        }\r\n        if (to < from) {\r\n            for (let i = to; i < from; i++) {\r\n                arraySwap(this._todos, incompleteTodoPositions[from], incompleteTodoPositions[i]);\r\n            }\r\n        }\r\n        else {\r\n            for (let i = to; i > from; i--) {\r\n                arraySwap(this._todos, incompleteTodoPositions[from], incompleteTodoPositions[i]);\r\n            }\r\n        }\r\n        function arraySwap(arr, x, y) {\r\n            let a = arr[x];\r\n            arr[x] = arr[y];\r\n            arr[y] = a;\r\n        }\r\n    }\r\n    add(id, name) {\r\n        let agId = this.id || uuid_1.v4();\r\n        this.applyAndStage(new events_1.TodoAdded(agId, id, name));\r\n    }\r\n    remove(id) {\r\n        this.applyAndStage(new events_1.TodoRemoved(this.id, id));\r\n    }\r\n    complete(id, completionTimestamp) {\r\n        this.applyAndStage(new events_1.TodoCompleted(this.id, id, completionTimestamp));\r\n    }\r\n    uncomplete(id) {\r\n        this.applyAndStage(new events_1.TodoUncompleted(this.id, id));\r\n    }\r\n    rename(id, name) {\r\n        this.applyAndStage(new events_1.TodoRenamed(this.id, id, name));\r\n    }\r\n    changePosition(id, offset) {\r\n        this.applyAndStage(new events_1.TodoPositionChanged(this.id, id, offset));\r\n    }\r\n}\r\nexports.TodoList = TodoList;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(0);\r\nfunction historyTodoController(di, todo) {\r\n    let fragment = (todo.isCompleted)\r\n        ? utils_1.templateClone(\"historyCompletedTodoTemplate\")\r\n        : utils_1.templateClone(\"historyTodoTemplate\");\r\n    utils_1.fillControllerElements(fragment, \"historyTodoTitlePanelController\", di.historyTodoTitlePanelController(di, todo));\r\n    return fragment;\r\n}\r\nexports.historyTodoController = historyTodoController;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst event_store_1 = __webpack_require__(2);\r\nfunction todoListEvents() {\r\n    // This app's domain and event-store are designed to accommodate multiple aggregates of different types.\r\n    // Currently, the app only has one aggregate type (TodoList) and only allows the user to have one instance of that aggregate.\r\n    // This todoLists() lookup occurs to get the aggreateId of the user's one TodoList.\r\n    return event_store_1.allDomainEvents()\r\n        .then(events => {\r\n        let lists = todoLists(events);\r\n        return (lists.length)\r\n            ? event_store_1.domainEventsByAggregate(lists[0])\r\n            : [];\r\n    });\r\n}\r\nexports.todoListEvents = todoListEvents;\r\nfunction todoLists(events) {\r\n    return events.reduce((p, c) => {\r\n        if (c.type === event_store_1.DomainEventType.TodoAdded && p.indexOf(c.aggregateId) === -1) {\r\n            p.push(c.aggregateId);\r\n        }\r\n        return p;\r\n    }, []);\r\n}\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(35)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst uuid_1 = __webpack_require__(3);\r\nconst app_common_1 = __webpack_require__(1);\r\nconst todo_list_1 = __webpack_require__(4);\r\nconst event_store_1 = __webpack_require__(2);\r\nconst read_1 = __webpack_require__(6);\r\nconst utils_1 = __webpack_require__(0);\r\nfunction addTodoFormController(di, todoListId) {\r\n    let fragment = utils_1.templateClone(\"addTodoFormTemplate\");\r\n    let addTodoForm = utils_1.findElement(fragment, \"#addTodoForm\");\r\n    let addTodoInput = utils_1.findElement(addTodoForm, \"#addTodoInput\");\r\n    $(addTodoInput).on(\"invalid\", app_common_1.invalidNameInputHandler);\r\n    $(addTodoForm).submit(e => {\r\n        e.preventDefault();\r\n        // This is to deal with the possibility that the user opens the app for the first time in two tabs\r\n        // and adds a to-do to each new TodoList. TodoList ids are generated when the first Todo is\r\n        // added to them. So, on first load, there are no Todos and no TodoLists, and this handler\r\n        // can't know whether to create a new TodoList or load one that might have been made in another tab.\r\n        // So, if the current TodoList has no id -- i.e. no todos have been added -- we check if any other\r\n        // tab has added a new TodoList and use that id.\r\n        let eventsPromise = (todoListId)\r\n            ? event_store_1.domainEventsByAggregate(todoListId)\r\n            : read_1.todoListEvents();\r\n        eventsPromise.then((events) => {\r\n            let todoList = new todo_list_1.TodoList(events);\r\n            todoList.add(uuid_1.v4(), addTodoInput.value);\r\n            addTodoForm.reset();\r\n            // This assignment is only necessary when the first Todo is added to a new TodoList.\r\n            todoListId = todoList.id;\r\n            return event_store_1.postDomainEvents(todoList.uncommittedEvents);\r\n        }).then(() => di.refreshLists(di, todoListId))\r\n            .catch(console.log);\r\n    });\r\n    return fragment;\r\n}\r\nexports.addTodoFormController = addTodoFormController;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(0);\r\nfunction bodyController(di, events) {\r\n    let fragment = utils_1.templateClone(\"bodyTemplate\");\r\n    utils_1.fillControllerElements(fragment, \"todoListPanelController\", di.todoListPanelController(di, events));\r\n    utils_1.fillControllerElements(fragment, \"eventListController\", di.eventListController(di, events));\r\n    return fragment;\r\n}\r\nexports.bodyController = bodyController;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(0);\r\nfunction completedTodoListController(di, todos) {\r\n    if (!todos.length) {\r\n        return document.createDocumentFragment();\r\n    }\r\n    let fragment = utils_1.templateClone(\"completedTodoListTemplate\");\r\n    utils_1.fillControllerElements(fragment, \"todoListController\", di.todoListController(di, todos));\r\n    return fragment;\r\n}\r\nexports.completedTodoListController = completedTodoListController;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst uuid_1 = __webpack_require__(3);\r\nconst app_common_1 = __webpack_require__(1);\r\nconst utils_1 = __webpack_require__(0);\r\nconst history_todo_controller_1 = __webpack_require__(5);\r\nfunction eventListController(di, events) {\r\n    if (!events.length) {\r\n        return utils_1.templateClone(\"emptyEventListTemplate\");\r\n    }\r\n    let todoListId = events[0].aggregateId;\r\n    let fragment = utils_1.templateClone(\"eventListTemplate\");\r\n    let historyDi = Object.assign({}, di);\r\n    historyDi.todoController = history_todo_controller_1.historyTodoController;\r\n    let eventListDelegatedEventTarget = utils_1.findElement(fragment, \"#eventListDelegatedEventTarget\");\r\n    let $eventListDelegatedEventTarget = $(eventListDelegatedEventTarget);\r\n    $eventListDelegatedEventTarget.on(\"click\", \".event-list-item\", e => {\r\n        let refreshBodyEventNamespace = \".activeEventFocusOut:\" + uuid_1.v4();\r\n        // This handler will reset the body to the interactive todolist when the user clicks\r\n        // anywhere in the document outside of the event list.\r\n        $(document).on(`click${refreshBodyEventNamespace} keypress${refreshBodyEventNamespace}`, e2 => {\r\n            // Short-circuit when handler is triggered by event that created it\r\n            // or when isn't an 'enter' keypress\r\n            // or when the event-list-item contains the click target\r\n            if (e.originalEvent === e2.originalEvent\r\n                || (e2.type === \"keypress\" && e2.which !== 13)\r\n                || e.currentTarget.contains(e2.target)) {\r\n                return;\r\n            }\r\n            $(document).off(refreshBodyEventNamespace);\r\n            if (!eventListDelegatedEventTarget.contains(e2.target)) {\r\n                di.refreshBody(di, todoListId)\r\n                    .catch(console.log);\r\n            }\r\n        });\r\n        let eventId = utils_1.getRequiredAttribute(e.currentTarget, app_common_1.eventIdDataAttrName);\r\n        let historyEvents = events.slice(0, parseInt(eventId, 10));\r\n        utils_1.fillControllerElements(document, \"todoListPanelController\", historyDi.historyTodoListPanelController(historyDi, historyEvents));\r\n    });\r\n    utils_1.fillControllerElements(fragment, \"eventListGroupController\", di.eventListGroupController(di, events));\r\n    return fragment;\r\n}\r\nexports.eventListController = eventListController;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst app_common_1 = __webpack_require__(1);\r\nconst utils_1 = __webpack_require__(0);\r\nfunction eventListGroupController(di, events) {\r\n    if (events.length) {\r\n        let fragment = document.createDocumentFragment();\r\n        events.forEach(e => {\r\n            let listItemFragment = utils_1.templateClone(\"eventListItemTemplate\");\r\n            utils_1.setAttrElements(listItemFragment, app_common_1.eventIdDataAttrName, e.id.toString());\r\n            utils_1.fillControllerElements(listItemFragment, \"eventTextController\", di.eventTextController(di, e));\r\n            fragment.appendChild(listItemFragment);\r\n        });\r\n        return fragment;\r\n    }\r\n    else {\r\n        let fragment = utils_1.templateClone(\"emptyEventListTemplate\");\r\n        return fragment;\r\n    }\r\n}\r\nexports.eventListGroupController = eventListGroupController;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst event_store_1 = __webpack_require__(2);\r\nfunction eventTextController(di, event) {\r\n    let fragment = document.createDocumentFragment();\r\n    fragment.textContent = `${event.id} : ${event_store_1.DomainEventType[event.type]}`;\r\n    return fragment;\r\n}\r\nexports.eventTextController = eventTextController;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst todo_list_1 = __webpack_require__(4);\r\nconst utils_1 = __webpack_require__(0);\r\nfunction historyTodoListPanelController(di, events) {\r\n    let fragment = utils_1.templateClone(\"historyTodoListPanelTemplate\");\r\n    let todoList = new todo_list_1.TodoList(events);\r\n    utils_1.fillControllerElements(fragment, \"incompleteTodoListController\", di.incompleteTodoListController(di, todoList.todos));\r\n    utils_1.fillControllerElements(fragment, \"completedTodoListController\", di.completedTodoListController(di, todoList.completedTodos));\r\n    return fragment;\r\n}\r\nexports.historyTodoListPanelController = historyTodoListPanelController;\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(0);\r\nfunction historyTodoTitlePanelController(di, todo) {\r\n    let fragment = utils_1.templateClone(\"historyTodoTitlePanelTemplate\");\r\n    utils_1.fillControllerElements(fragment, \"todoTitleController\", di.todoTitleController(di, todo));\r\n    return fragment;\r\n}\r\nexports.historyTodoTitlePanelController = historyTodoTitlePanelController;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(0);\r\nfunction incompleteTodoListController(di, todos) {\r\n    if (!todos.length) {\r\n        return document.createDocumentFragment();\r\n    }\r\n    let fragment = utils_1.templateClone(\"incompleteTodoListTemplate\");\r\n    utils_1.fillControllerElements(fragment, \"todoListController\", di.todoListController(di, todos));\r\n    return fragment;\r\n}\r\nexports.incompleteTodoListController = incompleteTodoListController;\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst app_common_1 = __webpack_require__(1);\r\nconst utils_1 = __webpack_require__(0);\r\nfunction todoActionsPanelButtonsController(di, todo) {\r\n    let fragment = utils_1.templateClone(\"todoDeleteBtnTemplate\");\r\n    if (!todo.isCompleted) {\r\n        fragment.appendChild(utils_1.templateClone(\"todoMoveUpBtnTemplate\"));\r\n        fragment.appendChild(utils_1.templateClone(\"todoMoveDownBtnTemplate\"));\r\n    }\r\n    fragment.appendChild(utils_1.templateClone(\"todoRenameBtnTemplate\"));\r\n    utils_1.setAttrElements(fragment, app_common_1.todoIdDataAttrName, todo.id);\r\n    return fragment;\r\n}\r\nexports.todoActionsPanelButtonsController = todoActionsPanelButtonsController;\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(0);\r\nfunction todoActionsPanelController(di, todo) {\r\n    let fragment = utils_1.templateClone(\"todoActionsPanelTemplate\");\r\n    utils_1.fillControllerElements(fragment, \"todoTitleController\", di.todoTitleController(di, todo));\r\n    utils_1.fillControllerElements(fragment, \"todoActionsPanelButtonsController\", di.todoActionsPanelButtonsController(di, todo));\r\n    return fragment;\r\n}\r\nexports.todoActionsPanelController = todoActionsPanelController;\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst app_common_1 = __webpack_require__(1);\r\nconst utils_1 = __webpack_require__(0);\r\nfunction todoController(di, todo) {\r\n    let fragment = (todo.isCompleted)\r\n        ? utils_1.templateClone(\"completedTodoTemplate\")\r\n        : utils_1.templateClone(\"todoTemplate\");\r\n    utils_1.setAttrElements(fragment, app_common_1.todoIdDataAttrName, todo.id);\r\n    utils_1.fillControllerElements(fragment, \"todoTitlePanelController\", di.todoTitlePanelController(di, todo));\r\n    utils_1.fillControllerElements(fragment, \"todoActionsPanelController\", di.todoActionsPanelController(di, todo));\r\n    utils_1.fillControllerElements(fragment, \"todoRenamePanelController\", di.todoRenamePanelController(di, todo));\r\n    return fragment;\r\n}\r\nexports.todoController = todoController;\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(0);\r\nfunction todoListController(di, todos) {\r\n    let fragment = utils_1.templateClone(\"todoListTemplate\");\r\n    utils_1.fillControllerElements(fragment, \"todoListGroupController\", di.todoListGroupController(di, todos));\r\n    return fragment;\r\n}\r\nexports.todoListController = todoListController;\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction todoListGroupController(di, todos) {\r\n    let fragment = document.createDocumentFragment();\r\n    for (const todo of todos) {\r\n        fragment.appendChild(di.todoController(di, todo));\r\n    }\r\n    return fragment;\r\n}\r\nexports.todoListGroupController = todoListGroupController;\r\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst uuid_1 = __webpack_require__(3);\r\nconst app_common_1 = __webpack_require__(1);\r\nconst todo_list_1 = __webpack_require__(4);\r\nconst event_store_1 = __webpack_require__(2);\r\nconst utils_1 = __webpack_require__(0);\r\nfunction todoListPanelController(di, events) {\r\n    let fragment = utils_1.templateClone(\"todoListPanelTemplate\");\r\n    let todoList = new todo_list_1.TodoList(events);\r\n    let todoListId = todoList.id;\r\n    let $todoListDelegatedEventTarget = $(utils_1.findElement(fragment, \"#todolistDelegatedEventTarget\"));\r\n    $todoListDelegatedEventTarget.on(\"submit\", \".renameTodoForm\", e => {\r\n        e.preventDefault();\r\n        event_store_1.domainEventsByAggregate(todoListId)\r\n            .then(refreshEvents => {\r\n            let refreshTodoList = new todo_list_1.TodoList(refreshEvents);\r\n            let todoName = $(e.currentTarget).find(\"input[name='name']\").val();\r\n            let todoId = utils_1.getRequiredAttribute(e.currentTarget, app_common_1.todoIdDataAttrName);\r\n            refreshTodoList.rename(todoId, todoName);\r\n            return event_store_1.postDomainEvents(refreshTodoList.uncommittedEvents);\r\n        }).then(() => di.refreshLists(di, todoListId))\r\n            .catch(console.log);\r\n    });\r\n    // Need to handle keypress here because the completeTodoBtn is an <a> without an href,\r\n    // so tabbing to it and pressing enter doesn't trigger a click event like it would with a <button>.\r\n    // I want completeTodoBtn to act like a <button>, but it has another <button> inside of it (todoActionsBtn),\r\n    // so browsers and Bootstrap styling wouldn't work if it was a <button> (HTML spec says no interactive content\r\n    // inside interactive content). By using an <a> with no href I get the a.list-group-item Bootstrap styling.\r\n    $todoListDelegatedEventTarget.on(\"click keypress\", \".completeTodoBtn\", e => {\r\n        completeTodoBtnHandler(e, true);\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"click keypress\", \".uncompleteTodoBtn\", e => {\r\n        completeTodoBtnHandler(e, false);\r\n    });\r\n    function completeTodoBtnHandler(e, isComplete) {\r\n        // only handle \"enter\" keypresses\r\n        if (e.type === \"keypress\" && e.which !== 13) {\r\n            return;\r\n        }\r\n        // short-circuit if this event has bubbled up from the todoActionsBtn (which is inside (un)complete todo buttons)\r\n        let todoActionsBtn = $(e.currentTarget).find(\".todoActionsBtn\")[0];\r\n        if (todoActionsBtn === e.target || $.contains(todoActionsBtn, e.target)) {\r\n            return;\r\n        }\r\n        event_store_1.domainEventsByAggregate(todoListId)\r\n            .then(refreshEvents => {\r\n            let refreshTodoList = new todo_list_1.TodoList(refreshEvents);\r\n            let todoId = utils_1.getRequiredAttribute(e.currentTarget, app_common_1.todoIdDataAttrName);\r\n            if (isComplete) {\r\n                refreshTodoList.complete(todoId, Date.now());\r\n            }\r\n            else {\r\n                refreshTodoList.uncomplete(todoId);\r\n            }\r\n            return event_store_1.postDomainEvents(refreshTodoList.uncommittedEvents);\r\n        }).then(() => di.refreshLists(di, todoListId))\r\n            .catch(console.log);\r\n    }\r\n    $todoListDelegatedEventTarget.on(\"click\", \".moveTodoUpBtn\", e => {\r\n        event_store_1.domainEventsByAggregate(todoListId)\r\n            .then(refreshEvents => {\r\n            let refreshTodoList = new todo_list_1.TodoList(refreshEvents);\r\n            let todoId = utils_1.getRequiredAttribute(e.currentTarget, app_common_1.todoIdDataAttrName);\r\n            refreshTodoList.changePosition(todoId, -1);\r\n            return event_store_1.postDomainEvents(refreshTodoList.uncommittedEvents);\r\n        }).then(() => di.refreshLists(di, todoListId))\r\n            .catch(console.log);\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"click\", \".moveTodoDownBtn\", e => {\r\n        event_store_1.domainEventsByAggregate(todoListId)\r\n            .then(refreshEvents => {\r\n            let refreshTodoList = new todo_list_1.TodoList(refreshEvents);\r\n            let todoId = utils_1.getRequiredAttribute(e.currentTarget, app_common_1.todoIdDataAttrName);\r\n            refreshTodoList.changePosition(todoId, 1);\r\n            return event_store_1.postDomainEvents(refreshTodoList.uncommittedEvents);\r\n        }).then(() => di.refreshLists(di, todoListId))\r\n            .catch(console.log);\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"click\", \".deleteTodoBtn\", e => {\r\n        event_store_1.domainEventsByAggregate(todoListId)\r\n            .then(refreshEvents => {\r\n            let refeshTodoList = new todo_list_1.TodoList(refreshEvents);\r\n            let todoId = utils_1.getRequiredAttribute(e.currentTarget, app_common_1.todoIdDataAttrName);\r\n            refeshTodoList.remove(todoId);\r\n            return event_store_1.postDomainEvents(refeshTodoList.uncommittedEvents);\r\n        }).then(() => di.refreshLists(di, todoListId))\r\n            .catch(console.log);\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"click\", \".todoActionsBtn\", e => {\r\n        let $defaultPanel = $(e.currentTarget).closest(\".todoPanelDefault\");\r\n        let $actionsPanel = $defaultPanel.next();\r\n        let $bothPanels = $defaultPanel.add($actionsPanel);\r\n        let actionsBtnGroup = $actionsPanel.find(\".todoActionsPanelBtnGroup\")[0];\r\n        let eventNamespace = \"click.todoActionsPanelClose:\" + uuid_1.v4();\r\n        $bothPanels.toggle();\r\n        // This handler will close (i.e. toggle) the ActionsPanel when the user clicks anywhere in the document outside of the actionsBtnGroup.\r\n        // eventNamespace is unique (probably) so each instance of this handler can only detach itself.\r\n        $(document).on(eventNamespace, closeEvent => {\r\n            // Short-circuit when handler is triggered by event that created it.\r\n            // This happens because this handler is created in the todolistDelegatedEventTarget handler but attached to the document.\r\n            // So, when the todolistDelegatedEventTarget handler returns, the click event that triggered it will still bubble to the document.\r\n            if (e.originalEvent === closeEvent.originalEvent) {\r\n                return;\r\n            }\r\n            if (!$.contains(actionsBtnGroup, closeEvent.target)) {\r\n                $bothPanels.toggle();\r\n            }\r\n            $(document).off(eventNamespace);\r\n        });\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"click\", \".renameTodoBtn\", e => {\r\n        let $actionsPanel = $(e.currentTarget).closest(\".todoActionsPanel\");\r\n        let $renamePanel = $actionsPanel.next();\r\n        $actionsPanel.add($renamePanel).toggle();\r\n        $renamePanel.find(\".renameTodoBtnClickFocusTarget\").first().focus();\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"blur\", \".renameTodoForm\", e => {\r\n        if (!(e.relatedTarget && $.contains(e.currentTarget, e.relatedTarget))) {\r\n            let $renamePanel = $(e.currentTarget).closest(\".todoRenamePanel\");\r\n            $renamePanel.prev().prev().add($renamePanel).toggle();\r\n        }\r\n    });\r\n    utils_1.fillControllerElements(fragment, \"addTodoFormController\", di.addTodoFormController(di, todoListId));\r\n    utils_1.fillControllerElements(fragment, \"incompleteTodoListController\", di.incompleteTodoListController(di, todoList.todos));\r\n    utils_1.fillControllerElements(fragment, \"completedTodoListController\", di.completedTodoListController(di, todoList.completedTodos));\r\n    return fragment;\r\n}\r\nexports.todoListPanelController = todoListPanelController;\r\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst app_common_1 = __webpack_require__(1);\r\nconst utils_1 = __webpack_require__(0);\r\nfunction todoRenamePanelController(di, todo) {\r\n    let fragment = utils_1.templateClone(\"todoRenamePanelTemplate\");\r\n    let input = utils_1.findElement(fragment, \"input[name='name']\");\r\n    let inputId = input.getAttribute(\"id\");\r\n    let newInputId = `${inputId}-${todo.id}`;\r\n    let label = utils_1.findElement(fragment, `label[for='${inputId}']`);\r\n    input.setAttribute(\"id\", newInputId);\r\n    input.setAttribute(\"value\", todo.name);\r\n    label.setAttribute(\"for\", newInputId);\r\n    utils_1.setAttrElements(fragment, app_common_1.todoIdDataAttrName, todo.id);\r\n    $(input).on(\"invalid\", app_common_1.invalidNameInputHandler);\r\n    return fragment;\r\n}\r\nexports.todoRenamePanelController = todoRenamePanelController;\r\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(0);\r\nfunction todoTitleController(di, todo) {\r\n    let titleFragment = document.createDocumentFragment();\r\n    titleFragment.textContent = todo.name;\r\n    if (todo.isCompleted) {\r\n        let completionDateFragment = utils_1.templateClone(\"todoCompletionDateTemplate\");\r\n        let date = new Date(todo.completionTimestamp);\r\n        utils_1.fillContentElements(completionDateFragment, \"completionDate\", date.toLocaleDateString());\r\n        titleFragment.appendChild(completionDateFragment);\r\n    }\r\n    return titleFragment;\r\n}\r\nexports.todoTitleController = todoTitleController;\r\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(0);\r\nfunction todoTitlePanelController(di, todo) {\r\n    let fragment = utils_1.templateClone(\"todoTitlePanelTemplate\");\r\n    utils_1.fillControllerElements(fragment, \"todoTitleController\", di.todoTitleController(di, todo));\r\n    return fragment;\r\n}\r\nexports.todoTitlePanelController = todoTitlePanelController;\r\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (true) {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst app_common_1 = __webpack_require__(1);\r\nconst add_todo_form_controller_1 = __webpack_require__(10);\r\nconst body_controller_1 = __webpack_require__(11);\r\nconst completed_todo_list_controller_1 = __webpack_require__(12);\r\nconst event_list_controller_1 = __webpack_require__(13);\r\nconst event_list_group_controller_1 = __webpack_require__(14);\r\nconst event_text_controller_1 = __webpack_require__(15);\r\nconst history_todo_controller_1 = __webpack_require__(5);\r\nconst history_todo_list_panel_controller_1 = __webpack_require__(16);\r\nconst history_todo_title_panel_controller_1 = __webpack_require__(17);\r\nconst incomplete_todo_list_controller_1 = __webpack_require__(18);\r\nconst todo_actions_panel_buttons_controller_1 = __webpack_require__(19);\r\nconst todo_actions_panel_controller_1 = __webpack_require__(20);\r\nconst todo_controller_1 = __webpack_require__(21);\r\nconst todo_list_controller_1 = __webpack_require__(22);\r\nconst todo_list_group_controller_1 = __webpack_require__(23);\r\nconst todo_list_panel_controller_1 = __webpack_require__(24);\r\nconst todo_rename_panel_controller_1 = __webpack_require__(25);\r\nconst todo_title_controller_1 = __webpack_require__(26);\r\nconst todo_title_panel_controller_1 = __webpack_require__(27);\r\nconst read_1 = __webpack_require__(6);\r\n__webpack_require__(9);\r\nconst utils_1 = __webpack_require__(0);\r\nif (!window.indexedDB) {\r\n    window.alert(\"Your browser doesn't support IndexedDB (the browser feature this app uses to store your To-dos). Update your browser to its latest version.\");\r\n}\r\nconst di = {\r\n    bodyController: body_controller_1.bodyController,\r\n    todoListPanelController: todo_list_panel_controller_1.todoListPanelController,\r\n    addTodoFormController: add_todo_form_controller_1.addTodoFormController,\r\n    incompleteTodoListController: incomplete_todo_list_controller_1.incompleteTodoListController,\r\n    completedTodoListController: completed_todo_list_controller_1.completedTodoListController,\r\n    todoListController: todo_list_controller_1.todoListController,\r\n    todoListGroupController: todo_list_group_controller_1.todoListGroupController,\r\n    todoController: todo_controller_1.todoController,\r\n    todoTitlePanelController: todo_title_panel_controller_1.todoTitlePanelController,\r\n    todoTitleController: todo_title_controller_1.todoTitleController,\r\n    todoActionsPanelController: todo_actions_panel_controller_1.todoActionsPanelController,\r\n    todoActionsPanelButtonsController: todo_actions_panel_buttons_controller_1.todoActionsPanelButtonsController,\r\n    todoRenamePanelController: todo_rename_panel_controller_1.todoRenamePanelController,\r\n    eventListController: event_list_controller_1.eventListController,\r\n    eventListGroupController: event_list_group_controller_1.eventListGroupController,\r\n    eventTextController: event_text_controller_1.eventTextController,\r\n    refreshLists: app_common_1.refreshLists,\r\n    refreshBody: app_common_1.refreshBody,\r\n    historyTodoListPanelController: history_todo_list_panel_controller_1.historyTodoListPanelController,\r\n    historyTodoController: history_todo_controller_1.historyTodoController,\r\n    historyTodoTitlePanelController: history_todo_title_panel_controller_1.historyTodoTitlePanelController,\r\n};\r\nread_1.todoListEvents()\r\n    .then(events => {\r\n    utils_1.fillControllerElements(document, \"bodyController\", di.bodyController(di, events));\r\n}).catch(console.log);\r\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst event_store_1 = __webpack_require__(2);\r\nclass AggregateRoot {\r\n    get uncommittedEvents() {\r\n        return this._uncommittedEvents;\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    init() {\r\n        this._uncommittedEvents = new Array();\r\n    }\r\n    constructor(events) {\r\n        this.init();\r\n        for (const e of events) {\r\n            this[event_store_1.DomainEventType[e.type]](e);\r\n        }\r\n    }\r\n    applyAndStage(e) {\r\n        this[event_store_1.DomainEventType[e.type]](e);\r\n        this._uncommittedEvents.push(e);\r\n    }\r\n}\r\nexports.AggregateRoot = AggregateRoot;\r\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst event_store_1 = __webpack_require__(2);\r\nclass TodoAdded {\r\n    constructor(aggregateId, todoId, todoName) {\r\n        this.aggregateId = aggregateId;\r\n        this.todoId = todoId;\r\n        this.todoName = todoName;\r\n        this.type = event_store_1.DomainEventType.TodoAdded;\r\n    }\r\n}\r\nexports.TodoAdded = TodoAdded;\r\nclass TodoRemoved {\r\n    constructor(aggregateId, todoId) {\r\n        this.aggregateId = aggregateId;\r\n        this.todoId = todoId;\r\n        this.type = event_store_1.DomainEventType.TodoRemoved;\r\n    }\r\n}\r\nexports.TodoRemoved = TodoRemoved;\r\nclass TodoCompleted {\r\n    constructor(aggregateId, todoId, todoCompletionTimestamp) {\r\n        this.aggregateId = aggregateId;\r\n        this.todoId = todoId;\r\n        this.todoCompletionTimestamp = todoCompletionTimestamp;\r\n        this.type = event_store_1.DomainEventType.TodoCompleted;\r\n    }\r\n}\r\nexports.TodoCompleted = TodoCompleted;\r\nclass TodoUncompleted {\r\n    constructor(aggregateId, todoId) {\r\n        this.aggregateId = aggregateId;\r\n        this.todoId = todoId;\r\n        this.type = event_store_1.DomainEventType.TodoUncompleted;\r\n    }\r\n}\r\nexports.TodoUncompleted = TodoUncompleted;\r\nclass TodoRenamed {\r\n    constructor(aggregateId, todoId, todoName) {\r\n        this.aggregateId = aggregateId;\r\n        this.todoId = todoId;\r\n        this.todoName = todoName;\r\n        this.type = event_store_1.DomainEventType.TodoRenamed;\r\n    }\r\n}\r\nexports.TodoRenamed = TodoRenamed;\r\nclass TodoPositionChanged {\r\n    constructor(aggregateId, todoId, todoOffset) {\r\n        this.aggregateId = aggregateId;\r\n        this.todoId = todoId;\r\n        this.todoOffset = todoOffset;\r\n        this.type = event_store_1.DomainEventType.TodoPositionChanged;\r\n    }\r\n}\r\nexports.TodoPositionChanged = TodoPositionChanged;\r\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Todo {\r\n    constructor(id, name) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.isCompleted = false;\r\n    }\r\n}\r\nexports.Todo = Todo;\r\nclass CompletedTodo extends Todo {\r\n    constructor(id, name, completionTimestamp) {\r\n        super(id, name);\r\n        this.completionTimestamp = completionTimestamp;\r\n        this.isCompleted = true;\r\n    }\r\n}\r\nexports.CompletedTodo = CompletedTodo;\r\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar rng = __webpack_require__(8);\nvar bytesToUuid = __webpack_require__(7);\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar rng = __webpack_require__(8);\nvar bytesToUuid = __webpack_require__(7);\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.011634daba0a009faf88.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a7a6a7b39d949ed75a5e","export function templateClone(id: string): DocumentFragment {\r\n    let selector = \"template#\" + id;\r\n    let template = document.querySelector(selector) as HTMLTemplateElement | null;\r\n    if (!template) {\r\n        throw new Error(`Document missing required '${selector}' element`);\r\n    }\r\n    let fragment = document.importNode(template.content, true);\r\n    return fragment;\r\n}\r\n\r\nexport function fillControllerElements(parentNode: NodeSelector, controllerName: string, newChild: DocumentFragment): void {\r\n    let elems = findControllerElements(parentNode, controllerName);\r\n    // NodeList isn't iterable on Edge, so you can't use array.forEach()\r\n    Array.prototype.forEach.call(elems, (e: HTMLElement) => {\r\n        e.innerHTML = \"\";\r\n        e.appendChild(newChild);\r\n    });\r\n}\r\n\r\nfunction findControllerElements(parentNode: NodeSelector, controllerName: string): NodeListOf<HTMLElement> {\r\n    let selector = `[data-estd-controller='${controllerName}']`;\r\n    return findAllElements(parentNode, selector) as NodeListOf<HTMLElement>;\r\n}\r\n\r\nexport function fillContentElements(parentNode: NodeSelector, propName: string, content: string): void {\r\n    let elems = findContentElements(parentNode, propName);\r\n    // NodeList isn't iterable on Edge, so you can't use array.forEach()\r\n    Array.prototype.forEach.call(elems, (e: Element) => {\r\n        e.textContent = content;\r\n    });\r\n}\r\n\r\nfunction findContentElements(parentNode: NodeSelector, propName: string): NodeListOf<Element> {\r\n    let selector = `[data-estd-content='${propName}']`;\r\n    return findAllElements(parentNode, selector);\r\n}\r\n\r\nexport function setAttrElements(parentNode: NodeSelector, attrName: string, value: string): void {\r\n    let elems = findAttrElements(parentNode, attrName);\r\n    // NodeList isn't iterable on Edge, so you can't use array.forEach()\r\n    Array.prototype.forEach.call(elems, (e: Element) => {\r\n        e.setAttribute(attrName, value);\r\n    });\r\n}\r\n\r\nfunction findAttrElements(parentNode: NodeSelector, attrName: string): NodeListOf<Element> {\r\n    let selector = `[data-estd-attr='${attrName}']`;\r\n    return findAllElements(parentNode, selector);\r\n}\r\n\r\nexport function findElement(parentNode: NodeSelector, selector: string): Element {\r\n    let element = parentNode.querySelector(selector);\r\n    if (!element) {\r\n        throw new Error(`'${parentNode}' missing required '${selector}' element`);\r\n    }\r\n    return element;\r\n}\r\n\r\nfunction findAllElements(parentNode: NodeSelector, selector: string): NodeListOf<Element> {\r\n    let elements = parentNode.querySelectorAll(selector);\r\n    if (!elements.length) {\r\n        throw new Error(`'${parentNode}' missing required '${selector}' element`);\r\n    }\r\n    return elements;\r\n}\r\n\r\nexport function getRequiredAttribute(element: Element, attributeName: string): string {\r\n    let value = element.getAttribute(attributeName);\r\n    if (!value) {\r\n        throw new Error(`'${element}' missing required '${attributeName}' attribute`);\r\n    }\r\n    return value;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./utils.ts","import { v4 as uuid } from \"uuid\";\r\nimport { Dependencies } from \"./dependencies\";\r\nimport { TodoList } from \"./domain/todo-list\";\r\nimport { AggregateIdType, domainEventsByAggregate } from \"./event-store\";\r\nimport { fillControllerElements } from \"./utils\";\r\n\r\nexport const todoIdDataAttrName = \"data-estd-todo-id\";\r\nexport const eventIdDataAttrName = \"data-estd-event-id\";\r\n\r\nexport function refreshLists(di: Dependencies, todoListId: AggregateIdType): Promise<void> {\r\n    return domainEventsByAggregate(todoListId)\r\n        .then(events => {\r\n            let todoList = new TodoList(events);\r\n            fillControllerElements(document, \"incompleteTodoListController\", di.incompleteTodoListController(di, todoList.todos));\r\n            fillControllerElements(document, \"completedTodoListController\", di.completedTodoListController(di, todoList.completedTodos));\r\n            fillControllerElements(document, \"eventListController\", di.eventListController(di, events));\r\n        });\r\n}\r\n\r\nexport function refreshBody(di: Dependencies, todoListId: AggregateIdType): Promise<void> {\r\n    return domainEventsByAggregate(todoListId)\r\n        .then(events => {\r\n            fillControllerElements(document, \"bodyController\", di.bodyController(di, events));\r\n        });\r\n}\r\n\r\nexport function invalidNameInputHandler(e: JQueryEventObject): void {\r\n    let input = e.currentTarget as HTMLInputElement;\r\n    let $input = $(input);\r\n    let $form = $input.closest(\"form\");\r\n    let $button = $input.next().children(\"button\");\r\n    $form.addClass(\"has-error\");\r\n    $button.removeClass(\"btn-success\").addClass(\"btn-danger\");\r\n\r\n    let validationEventNamespace = \".nameTodoInputValidation:\" + uuid();\r\n    function clearValidation(): void {\r\n        $form.removeClass(\"has-error\");\r\n        $button.removeClass(\"btn-danger\").addClass(\"btn-success\");\r\n        $form.off(validationEventNamespace);\r\n        $input.off(validationEventNamespace);\r\n    }\r\n    $input.on(\"input\" + validationEventNamespace, () => {\r\n        if (input.validity.valid) {\r\n            clearValidation();\r\n        }\r\n    });\r\n    $form.on(\"focusout\" + validationEventNamespace, focusOutEvent => {\r\n        if (!focusOutEvent.currentTarget.contains(focusOutEvent.relatedTarget)) {\r\n            clearValidation();\r\n        }\r\n    });\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./app.common.ts","import idb, { Cursor, DB } from \"idb\";\r\n\r\nexport enum DomainEventType {\r\n    TodoAdded,\r\n    TodoRemoved,\r\n    TodoCompleted,\r\n    TodoUncompleted,\r\n    TodoRenamed,\r\n    TodoPositionChanged,\r\n}\r\nexport type AggregateIdType = string;\r\nexport interface UncommittedDomainEvent {\r\n    readonly aggregateId: AggregateIdType;\r\n    readonly type: DomainEventType;\r\n}\r\nexport interface DomainEvent extends UncommittedDomainEvent {\r\n    readonly id: number;\r\n}\r\nexport interface EventStore {\r\n    getAllDomainEvents(version?: number): Promise<DomainEvent[]>;\r\n    getDomainEventsByAggregate(aggregateId: AggregateIdType, version?: number): Promise<DomainEvent[]>;\r\n    postDomainEvents(events: UncommittedDomainEvent[]): Promise<void>;\r\n}\r\n\r\nconst dbName = \"estd-db\";\r\nconst domainEventStoreName = \"domain-event\";\r\nconst aggregateIdPropName = \"aggregateId\";\r\nconst eventIdPropName = \"id\";\r\n\r\nfunction open(): Promise<DB> {\r\n    return idb.open(dbName, 1, db => {\r\n        switch (db.oldVersion) {\r\n            case 0:\r\n                db.createObjectStore(domainEventStoreName, { autoIncrement: true, keyPath: eventIdPropName })\r\n                    .createIndex(aggregateIdPropName, aggregateIdPropName);\r\n        }\r\n    });\r\n}\r\nexport function allDomainEvents(version?: number): Promise<DomainEvent[]> {\r\n    return open().then(db => {\r\n        let events = [] as DomainEvent[];\r\n        let tx = db.transaction(domainEventStoreName);\r\n        let store = tx.objectStore(domainEventStoreName);\r\n        function cursorCallback(cursor: Cursor): void {\r\n            if (!cursor) {\r\n                return;\r\n            }\r\n            events.push(cursor.value as DomainEvent);\r\n            // tslint:disable-next-line:no-floating-promises\r\n            cursor.continue();\r\n        }\r\n        // iterateCursor() should be replace with usage of openCursor() when \"idb\" decides it is safe to do so.\r\n        if (version) {\r\n            store.iterateCursor(IDBKeyRange.upperBound(version), cursorCallback);\r\n        } else {\r\n            store.iterateCursor(cursorCallback);\r\n        }\r\n        return tx.complete.then(() => events);\r\n    });\r\n}\r\n\r\nexport function domainEventsByAggregate(aggregateId: AggregateIdType, version?: number): Promise<DomainEvent[]> {\r\n    return open().then(db => {\r\n        let events = [] as DomainEvent[];\r\n        let tx = db.transaction(domainEventStoreName);\r\n        let index = tx.objectStore(domainEventStoreName).index(aggregateIdPropName);\r\n        function cursorCallback(cursor: Cursor): void {\r\n            if (!cursor) {\r\n                return;\r\n            }\r\n            let event = cursor.value as DomainEvent;\r\n            if (!version || event.id <= version) {\r\n                events.push(event);\r\n            }\r\n            // tslint:disable-next-line:no-floating-promises\r\n            cursor.continue();\r\n        }\r\n        // iterateCursor() should be replace with usage of openCursor() when \"idb\" decides it is safe to do so.\r\n        index.iterateCursor(cursorCallback);\r\n        return tx.complete.then(() => events);\r\n    });\r\n}\r\nexport function postDomainEvents(events: UncommittedDomainEvent[]): Promise<void> {\r\n    return open().then(db => {\r\n        let tx = db.transaction(domainEventStoreName, \"readwrite\");\r\n        let store = tx.objectStore(domainEventStoreName);\r\n        events.forEach(x => store.add(x));\r\n        return tx.complete;\r\n    });\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./event-store.ts","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/index.js\n// module id = 3\n// module chunks = 0","import { v4 as uuid } from \"uuid\";\r\nimport { AggregateRoot } from \"./aggregate-root\";\r\nimport { TodoAdded, TodoCompleted, TodoPositionChanged, TodoRemoved, TodoRenamed, TodoUncompleted } from \"./events\";\r\nimport { CompletedTodo, Todo, TodoIdType } from \"./todo\";\r\n\r\nexport class TodoList extends AggregateRoot {\r\n    protected _todos: (Todo | CompletedTodo)[];\r\n    get todos(): Todo[] {\r\n        return this._todos.filter(x => !x.isCompleted);\r\n    }\r\n    get completedTodos(): CompletedTodo[] {\r\n        return (this._todos.filter(x => x.isCompleted) as CompletedTodo[])\r\n            .sort((x, y) => y.completionTimestamp - x.completionTimestamp);\r\n    }\r\n    protected init(): void {\r\n        super.init();\r\n        this._todos = [];\r\n    }\r\n\r\n    // Domain Event Handlers\r\n    protected TodoAdded(e: TodoAdded): void {\r\n        if (!this.id) {\r\n            this._id = e.aggregateId;\r\n        }\r\n        this._todos.push(new Todo(e.todoId, e.todoName));\r\n    }\r\n    protected TodoRemoved(e: TodoRemoved): void {\r\n        let i = this._todos.findIndex(x => x.id === e.todoId);\r\n        if (i !== -1) {\r\n            this._todos.splice(i, 1);\r\n        }\r\n    }\r\n    protected TodoCompleted(e: TodoCompleted): void {\r\n        let i = this._todos.findIndex(x => x.id === e.todoId);\r\n        if (i !== -1) {\r\n            let oldTodo = this._todos[i];\r\n            let newTodo = new CompletedTodo(oldTodo.id, oldTodo.name, e.todoCompletionTimestamp);\r\n            this._todos[i] = newTodo;\r\n        }\r\n    }\r\n    protected TodoUncompleted(e: TodoUncompleted): void {\r\n        let i = this._todos.findIndex(x => x.id === e.todoId);\r\n        if (i !== -1) {\r\n            let oldTodo = this._todos[i];\r\n            let newTodo = new Todo(oldTodo.id, oldTodo.name);\r\n            this._todos[i] = newTodo;\r\n        }\r\n    }\r\n    protected TodoRenamed(e: TodoRenamed): void {\r\n        let todo = this._todos.find(x => x.id === e.todoId);\r\n        if (todo) {\r\n            todo.name = e.todoName;\r\n        }\r\n    }\r\n    protected TodoPositionChanged(e: TodoPositionChanged): void {\r\n        let incompleteTodoPositions: number[] = this._todos.reduce<number[]>((p, c, i) => {\r\n            if (!c.isCompleted) {\r\n                p.push(i);\r\n            }\r\n            return p;\r\n        }, []);\r\n        let from = incompleteTodoPositions.findIndex(x => this._todos[x].id === e.todoId);\r\n        if (from === -1) {\r\n            return;\r\n        }\r\n        let to = from + e.todoOffset;\r\n        if (to < 0) {\r\n            to = 0;\r\n        } else if (to > incompleteTodoPositions.length - 1) {\r\n            to = incompleteTodoPositions.length - 1;\r\n        }\r\n        if (from === to) {\r\n            return;\r\n        }\r\n        if (to < from) {\r\n            for (let i = to; i < from; i++) {\r\n                arraySwap(this._todos, incompleteTodoPositions[from], incompleteTodoPositions[i]);\r\n            }\r\n        } else {\r\n            for (let i = to; i > from; i--) {\r\n                arraySwap(this._todos, incompleteTodoPositions[from], incompleteTodoPositions[i]);\r\n            }\r\n        }\r\n        function arraySwap(arr: any[], x: number, y: number): void {\r\n            let a = arr[x];\r\n            arr[x] = arr[y];\r\n            arr[y] = a;\r\n        }\r\n    }\r\n\r\n    add(id: TodoIdType, name: string): void {\r\n        let agId = this.id || uuid();\r\n        this.applyAndStage(new TodoAdded(agId, id, name));\r\n    }\r\n    remove(id: TodoIdType): void {\r\n        this.applyAndStage(new TodoRemoved(this.id, id));\r\n    }\r\n    complete(id: TodoIdType, completionTimestamp: number): void {\r\n        this.applyAndStage(new TodoCompleted(this.id, id, completionTimestamp));\r\n    }\r\n    uncomplete(id: TodoIdType): void {\r\n        this.applyAndStage(new TodoUncompleted(this.id, id));\r\n    }\r\n    rename(id: TodoIdType, name: string): void {\r\n        this.applyAndStage(new TodoRenamed(this.id, id, name));\r\n    }\r\n    changePosition(id: TodoIdType, offset: number): void {\r\n        this.applyAndStage(new TodoPositionChanged(this.id, id, offset));\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./domain/todo-list.ts","import { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\nimport { fillControllerElements, templateClone } from \"../utils\";\r\n\r\nexport function historyTodoController(di: Dependencies, todo: Todo | CompletedTodo): DocumentFragment {\r\n    let fragment = (todo.isCompleted)\r\n        ? templateClone(\"historyCompletedTodoTemplate\")\r\n        : templateClone(\"historyTodoTemplate\");\r\n    fillControllerElements(fragment, \"historyTodoTitlePanelController\", di.historyTodoTitlePanelController(di, todo));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/history-todo-controller.ts","import { AggregateIdType, allDomainEvents, DomainEvent, domainEventsByAggregate, DomainEventType } from \"./event-store\";\r\n\r\nexport function todoListEvents(): Promise<DomainEvent[]> {\r\n    // This app's domain and event-store are designed to accommodate multiple aggregates of different types.\r\n    // Currently, the app only has one aggregate type (TodoList) and only allows the user to have one instance of that aggregate.\r\n    // This todoLists() lookup occurs to get the aggreateId of the user's one TodoList.\r\n    return allDomainEvents()\r\n        .then(events => {\r\n            let lists = todoLists(events);\r\n            return (lists.length)\r\n                ? domainEventsByAggregate(lists[0])\r\n                : [];\r\n        });\r\n}\r\n\r\nfunction todoLists(events: DomainEvent[]): AggregateIdType[] {\r\n    return events.reduce<AggregateIdType[]>((p, c) => {\r\n        if (c.type === DomainEventType.TodoAdded && p.indexOf(c.aggregateId) === -1) {\r\n            p.push(c.aggregateId);\r\n        }\r\n        return p;\r\n    }, []);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./read.ts","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/lib/bytesToUuid.js\n// module id = 7\n// module chunks = 0","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/lib/rng-browser.js\n// module id = 8\n// module chunks = 0","import { v4 as uuid } from \"uuid\";\r\nimport { invalidNameInputHandler } from \"../app.common\";\r\nimport { Dependencies } from \"../dependencies\";\r\nimport { TodoList } from \"../domain/todo-list\";\r\nimport { AggregateIdType, domainEventsByAggregate, postDomainEvents } from \"../event-store\";\r\nimport { todoListEvents } from \"../read\";\r\nimport { findElement, templateClone } from \"../utils\";\r\n\r\nexport function addTodoFormController(di: Dependencies, todoListId: AggregateIdType): DocumentFragment {\r\n    let fragment = templateClone(\"addTodoFormTemplate\");\r\n    let addTodoForm = findElement(fragment, \"#addTodoForm\") as HTMLFormElement;\r\n    let addTodoInput = findElement(addTodoForm, \"#addTodoInput\") as HTMLInputElement;\r\n    $(addTodoInput).on(\"invalid\", invalidNameInputHandler);\r\n    $(addTodoForm).submit(e => {\r\n        e.preventDefault();\r\n        // This is to deal with the possibility that the user opens the app for the first time in two tabs\r\n        // and adds a to-do to each new TodoList. TodoList ids are generated when the first Todo is\r\n        // added to them. So, on first load, there are no Todos and no TodoLists, and this handler\r\n        // can't know whether to create a new TodoList or load one that might have been made in another tab.\r\n        // So, if the current TodoList has no id -- i.e. no todos have been added -- we check if any other\r\n        // tab has added a new TodoList and use that id.\r\n        let eventsPromise = (todoListId)\r\n            ? domainEventsByAggregate(todoListId)\r\n            : todoListEvents();\r\n        eventsPromise.then((events) => {\r\n            let todoList = new TodoList(events);\r\n            todoList.add(uuid(), addTodoInput.value);\r\n            addTodoForm.reset();\r\n            // This assignment is only necessary when the first Todo is added to a new TodoList.\r\n            todoListId = todoList.id;\r\n            return postDomainEvents(todoList.uncommittedEvents);\r\n        }).then(() => di.refreshLists(di, todoListId))\r\n        .catch(console.log);\r\n    });\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/add-todo-form-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { DomainEvent } from \"../event-store\";\r\nimport { fillControllerElements, templateClone } from \"../utils\";\r\n\r\nexport function bodyController(di: Dependencies, events: DomainEvent[]): DocumentFragment {\r\n    let fragment = templateClone(\"bodyTemplate\");\r\n    fillControllerElements(fragment, \"todoListPanelController\", di.todoListPanelController(di, events));\r\n    fillControllerElements(fragment, \"eventListController\", di.eventListController(di, events));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/body-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo } from \"../domain/todo\";\r\nimport { fillControllerElements, templateClone } from \"../utils\";\r\n\r\nexport function completedTodoListController(di: Dependencies, todos: CompletedTodo[]): DocumentFragment {\r\n    if (!todos.length) {\r\n        return document.createDocumentFragment();\r\n    }\r\n    let fragment = templateClone(\"completedTodoListTemplate\");\r\n    fillControllerElements(fragment, \"todoListController\", di.todoListController(di, todos));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/completed-todo-list-controller.ts","import { v4 as uuid } from \"uuid\";\r\nimport { eventIdDataAttrName } from \"../app.common\";\r\nimport { Dependencies } from \"../dependencies\";\r\nimport { DomainEvent } from \"../event-store\";\r\nimport { fillControllerElements, findElement, getRequiredAttribute, templateClone } from \"../utils\";\r\nimport { historyTodoController } from \"./history-todo-controller\";\r\n\r\nexport function eventListController(di: Dependencies, events: DomainEvent[]): DocumentFragment {\r\n    if (!events.length) {\r\n        return templateClone(\"emptyEventListTemplate\");\r\n    }\r\n    let todoListId = events[0].aggregateId;\r\n    let fragment = templateClone(\"eventListTemplate\");\r\n    let historyDi = Object.assign({}, di);\r\n    historyDi.todoController = historyTodoController;\r\n    let eventListDelegatedEventTarget = findElement(fragment, \"#eventListDelegatedEventTarget\");\r\n    let $eventListDelegatedEventTarget = $(eventListDelegatedEventTarget);\r\n    $eventListDelegatedEventTarget.on(\"click\", \".event-list-item\", e => {\r\n        let refreshBodyEventNamespace = \".activeEventFocusOut:\" + uuid();\r\n        // This handler will reset the body to the interactive todolist when the user clicks\r\n        // anywhere in the document outside of the event list.\r\n        $(document).on(`click${refreshBodyEventNamespace} keypress${refreshBodyEventNamespace}`, e2 => {\r\n            // Short-circuit when handler is triggered by event that created it\r\n            // or when isn't an 'enter' keypress\r\n            // or when the event-list-item contains the click target\r\n            if (e.originalEvent === e2.originalEvent\r\n                || (e2.type === \"keypress\" && e2.which !== 13)\r\n                || e.currentTarget.contains(e2.target)) {\r\n                return;\r\n            }\r\n            $(document).off(refreshBodyEventNamespace);\r\n            if (!eventListDelegatedEventTarget.contains(e2.target)) {\r\n                di.refreshBody(di, todoListId)\r\n                .catch(console.log);\r\n            }\r\n        });\r\n        let eventId = getRequiredAttribute(e.currentTarget, eventIdDataAttrName);\r\n        let historyEvents = events.slice(0, parseInt(eventId, 10));\r\n        fillControllerElements(document, \"todoListPanelController\", historyDi.historyTodoListPanelController(historyDi, historyEvents));\r\n    });\r\n    fillControllerElements(fragment, \"eventListGroupController\", di.eventListGroupController(di, events));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/event-list-controller.ts","import { eventIdDataAttrName } from \"../app.common\";\r\nimport { Dependencies } from \"../dependencies\";\r\nimport { DomainEvent } from \"../event-store\";\r\nimport { fillControllerElements, setAttrElements, templateClone } from \"../utils\";\r\n\r\nexport function eventListGroupController(di: Dependencies, events: DomainEvent[]): DocumentFragment {\r\n    if (events.length) {\r\n        let fragment = document.createDocumentFragment();\r\n        events.forEach(e => {\r\n            let listItemFragment = templateClone(\"eventListItemTemplate\");\r\n            setAttrElements(listItemFragment, eventIdDataAttrName, e.id.toString());\r\n            fillControllerElements(listItemFragment, \"eventTextController\", di.eventTextController(di, e));\r\n            fragment.appendChild(listItemFragment);\r\n        });\r\n        return fragment;\r\n    } else {\r\n        let fragment = templateClone(\"emptyEventListTemplate\");\r\n        return fragment;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/event-list-group-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { DomainEvent, DomainEventType } from \"../event-store\";\r\n\r\nexport function eventTextController(di: Dependencies, event: DomainEvent): DocumentFragment {\r\n    let fragment = document.createDocumentFragment();\r\n    fragment.textContent = `${event.id} : ${DomainEventType[event.type]}`;\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/event-text-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { TodoList } from \"../domain/todo-list\";\r\nimport { DomainEvent } from \"../event-store\";\r\nimport { fillControllerElements, templateClone } from \"../utils\";\r\n\r\nexport function historyTodoListPanelController(di: Dependencies, events: DomainEvent[]): DocumentFragment {\r\n    let fragment = templateClone(\"historyTodoListPanelTemplate\");\r\n    let todoList = new TodoList(events);\r\n    fillControllerElements(fragment, \"incompleteTodoListController\", di.incompleteTodoListController(di, todoList.todos));\r\n    fillControllerElements(fragment, \"completedTodoListController\", di.completedTodoListController(di, todoList.completedTodos));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/history-todo-list-panel-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\nimport { fillControllerElements, templateClone } from \"../utils\";\r\n\r\nexport function historyTodoTitlePanelController(di: Dependencies, todo: Todo | CompletedTodo): DocumentFragment {\r\n    let fragment = templateClone(\"historyTodoTitlePanelTemplate\");\r\n    fillControllerElements(fragment, \"todoTitleController\", di.todoTitleController(di, todo));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/history-todo-title-panel-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { Todo } from \"../domain/todo\";\r\nimport { fillControllerElements, templateClone } from \"../utils\";\r\n\r\nexport function incompleteTodoListController(di: Dependencies, todos: Todo[]): DocumentFragment {\r\n    if (!todos.length) {\r\n        return document.createDocumentFragment();\r\n    }\r\n    let fragment = templateClone(\"incompleteTodoListTemplate\");\r\n    fillControllerElements(fragment, \"todoListController\", di.todoListController(di, todos));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/incomplete-todo-list-controller.ts","import { todoIdDataAttrName } from \"../app.common\";\r\nimport { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\nimport { setAttrElements, templateClone } from \"../utils\";\r\n\r\nexport function todoActionsPanelButtonsController(di: Dependencies, todo: Todo | CompletedTodo): DocumentFragment {\r\n    let fragment = templateClone(\"todoDeleteBtnTemplate\");\r\n    if (!todo.isCompleted) {\r\n        fragment.appendChild(templateClone(\"todoMoveUpBtnTemplate\"));\r\n        fragment.appendChild(templateClone(\"todoMoveDownBtnTemplate\"));\r\n    }\r\n    fragment.appendChild(templateClone(\"todoRenameBtnTemplate\"));\r\n    setAttrElements(fragment, todoIdDataAttrName, todo.id);\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/todo-actions-panel-buttons-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\nimport { fillControllerElements, templateClone } from \"../utils\";\r\nimport { todoTitleController } from \"./todo-title-controller\";\r\n\r\nexport function todoActionsPanelController(di: Dependencies, todo: Todo | CompletedTodo): DocumentFragment {\r\n    let fragment = templateClone(\"todoActionsPanelTemplate\");\r\n    fillControllerElements(fragment, \"todoTitleController\", di.todoTitleController(di, todo));\r\n    fillControllerElements(fragment, \"todoActionsPanelButtonsController\", di.todoActionsPanelButtonsController(di, todo));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/todo-actions-panel-controller.ts","import { todoIdDataAttrName } from \"../app.common\";\r\nimport { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\nimport { fillControllerElements, setAttrElements, templateClone } from \"../utils\";\r\n\r\nexport function todoController(di: Dependencies, todo: Todo | CompletedTodo): DocumentFragment {\r\n    let fragment = (todo.isCompleted)\r\n        ? templateClone(\"completedTodoTemplate\")\r\n        : templateClone(\"todoTemplate\");\r\n    setAttrElements(fragment, todoIdDataAttrName, todo.id);\r\n    fillControllerElements(fragment, \"todoTitlePanelController\", di.todoTitlePanelController(di, todo));\r\n    fillControllerElements(fragment, \"todoActionsPanelController\", di.todoActionsPanelController(di, todo));\r\n    fillControllerElements(fragment, \"todoRenamePanelController\", di.todoRenamePanelController(di, todo));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/todo-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\nimport { fillControllerElements, templateClone } from \"../utils\";\r\n\r\nexport function todoListController(di: Dependencies, todos: (Todo | CompletedTodo)[]): DocumentFragment {\r\n    let fragment = templateClone(\"todoListTemplate\");\r\n    fillControllerElements(fragment, \"todoListGroupController\", di.todoListGroupController(di, todos));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/todo-list-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\n\r\nexport function todoListGroupController(di: Dependencies, todos: (Todo | CompletedTodo)[]): DocumentFragment {\r\n    let fragment = document.createDocumentFragment();\r\n    for (const todo of todos) {\r\n        fragment.appendChild(di.todoController(di, todo));\r\n    }\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/todo-list-group-controller.ts","import { v4 as uuid } from \"uuid\";\r\nimport { todoIdDataAttrName } from \"../app.common\";\r\nimport { Dependencies } from \"../dependencies\";\r\nimport { TodoList } from \"../domain/todo-list\";\r\nimport { AggregateIdType, DomainEvent, domainEventsByAggregate, postDomainEvents } from \"../event-store\";\r\nimport { fillControllerElements, findElement, getRequiredAttribute, templateClone } from \"../utils\";\r\n\r\nexport function todoListPanelController(di: Dependencies, events: DomainEvent[]): DocumentFragment {\r\n    let fragment = templateClone(\"todoListPanelTemplate\");\r\n    let todoList = new TodoList(events);\r\n    let todoListId = todoList.id;\r\n    let $todoListDelegatedEventTarget = $(findElement(fragment, \"#todolistDelegatedEventTarget\"));\r\n    $todoListDelegatedEventTarget.on(\"submit\", \".renameTodoForm\", e => {\r\n        e.preventDefault();\r\n        domainEventsByAggregate(todoListId)\r\n            .then(refreshEvents => {\r\n                let refreshTodoList = new TodoList(refreshEvents);\r\n                let todoName = $(e.currentTarget).find(\"input[name='name']\").val() as string;\r\n                let todoId = getRequiredAttribute(e.currentTarget, todoIdDataAttrName);\r\n                refreshTodoList.rename(todoId, todoName);\r\n                return postDomainEvents(refreshTodoList.uncommittedEvents);\r\n            }).then(() => di.refreshLists(di, todoListId))\r\n            .catch(console.log);\r\n    });\r\n    // Need to handle keypress here because the completeTodoBtn is an <a> without an href,\r\n    // so tabbing to it and pressing enter doesn't trigger a click event like it would with a <button>.\r\n    // I want completeTodoBtn to act like a <button>, but it has another <button> inside of it (todoActionsBtn),\r\n    // so browsers and Bootstrap styling wouldn't work if it was a <button> (HTML spec says no interactive content\r\n    // inside interactive content). By using an <a> with no href I get the a.list-group-item Bootstrap styling.\r\n    $todoListDelegatedEventTarget.on(\"click keypress\", \".completeTodoBtn\", e => {\r\n        completeTodoBtnHandler(e, true);\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"click keypress\", \".uncompleteTodoBtn\", e => {\r\n        completeTodoBtnHandler(e, false);\r\n    });\r\n    function completeTodoBtnHandler(e: JQueryEventObject, isComplete: boolean): void {\r\n        // only handle \"enter\" keypresses\r\n        if (e.type === \"keypress\" && e.which !== 13) {\r\n            return;\r\n        }\r\n        // short-circuit if this event has bubbled up from the todoActionsBtn (which is inside (un)complete todo buttons)\r\n        let todoActionsBtn = $(e.currentTarget).find(\".todoActionsBtn\")[0];\r\n        if (todoActionsBtn === e.target || $.contains(todoActionsBtn, e.target)) {\r\n            return;\r\n        }\r\n        domainEventsByAggregate(todoListId)\r\n            .then(refreshEvents => {\r\n                let refreshTodoList = new TodoList(refreshEvents);\r\n                let todoId = getRequiredAttribute(e.currentTarget, todoIdDataAttrName);\r\n                if (isComplete) {\r\n                    refreshTodoList.complete(todoId, Date.now());\r\n                } else {\r\n                    refreshTodoList.uncomplete(todoId);\r\n                }\r\n                return postDomainEvents(refreshTodoList.uncommittedEvents);\r\n            }).then(() => di.refreshLists(di, todoListId))\r\n            .catch(console.log);\r\n    }\r\n    $todoListDelegatedEventTarget.on(\"click\", \".moveTodoUpBtn\", e => {\r\n        domainEventsByAggregate(todoListId)\r\n            .then(refreshEvents => {\r\n                let refreshTodoList = new TodoList(refreshEvents);\r\n                let todoId = getRequiredAttribute(e.currentTarget, todoIdDataAttrName);\r\n                refreshTodoList.changePosition(todoId, -1);\r\n                return postDomainEvents(refreshTodoList.uncommittedEvents);\r\n            }).then(() => di.refreshLists(di, todoListId))\r\n            .catch(console.log);\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"click\", \".moveTodoDownBtn\", e => {\r\n        domainEventsByAggregate(todoListId)\r\n            .then(refreshEvents => {\r\n                let refreshTodoList = new TodoList(refreshEvents);\r\n                let todoId = getRequiredAttribute(e.currentTarget, todoIdDataAttrName);\r\n                refreshTodoList.changePosition(todoId, 1);\r\n                return postDomainEvents(refreshTodoList.uncommittedEvents);\r\n            }).then(() => di.refreshLists(di, todoListId))\r\n            .catch(console.log);\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"click\", \".deleteTodoBtn\", e => {\r\n        domainEventsByAggregate(todoListId)\r\n            .then(refreshEvents => {\r\n                let refeshTodoList = new TodoList(refreshEvents);\r\n                let todoId = getRequiredAttribute(e.currentTarget, todoIdDataAttrName);\r\n                refeshTodoList.remove(todoId);\r\n                return postDomainEvents(refeshTodoList.uncommittedEvents);\r\n            }).then(() => di.refreshLists(di, todoListId))\r\n            .catch(console.log);\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"click\", \".todoActionsBtn\", e => {\r\n        let $defaultPanel = $(e.currentTarget).closest(\".todoPanelDefault\");\r\n        let $actionsPanel = $defaultPanel.next();\r\n        let $bothPanels = $defaultPanel.add($actionsPanel);\r\n        let actionsBtnGroup = $actionsPanel.find(\".todoActionsPanelBtnGroup\")[0];\r\n        let eventNamespace = \"click.todoActionsPanelClose:\" + uuid();\r\n        $bothPanels.toggle();\r\n\r\n        // This handler will close (i.e. toggle) the ActionsPanel when the user clicks anywhere in the document outside of the actionsBtnGroup.\r\n        // eventNamespace is unique (probably) so each instance of this handler can only detach itself.\r\n        $(document).on(eventNamespace, closeEvent => {\r\n            // Short-circuit when handler is triggered by event that created it.\r\n            // This happens because this handler is created in the todolistDelegatedEventTarget handler but attached to the document.\r\n            // So, when the todolistDelegatedEventTarget handler returns, the click event that triggered it will still bubble to the document.\r\n            if (e.originalEvent === closeEvent.originalEvent) {\r\n                return;\r\n            }\r\n            if (!$.contains(actionsBtnGroup, closeEvent.target)) {\r\n                $bothPanels.toggle();\r\n            }\r\n            $(document).off(eventNamespace);\r\n        });\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"click\", \".renameTodoBtn\", e => {\r\n        let $actionsPanel = $(e.currentTarget).closest(\".todoActionsPanel\");\r\n        let $renamePanel = $actionsPanel.next();\r\n        $actionsPanel.add($renamePanel).toggle();\r\n        $renamePanel.find(\".renameTodoBtnClickFocusTarget\").first().focus();\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"blur\", \".renameTodoForm\", e => {\r\n        if (!(e.relatedTarget && $.contains(e.currentTarget, e.relatedTarget))) {\r\n            let $renamePanel = $(e.currentTarget).closest(\".todoRenamePanel\");\r\n            $renamePanel.prev().prev().add($renamePanel).toggle();\r\n        }\r\n    });\r\n\r\n    fillControllerElements(fragment, \"addTodoFormController\", di.addTodoFormController(di, todoListId));\r\n    fillControllerElements(fragment, \"incompleteTodoListController\", di.incompleteTodoListController(di, todoList.todos));\r\n    fillControllerElements(fragment, \"completedTodoListController\", di.completedTodoListController(di, todoList.completedTodos));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/todo-list-panel-controller.ts","import { invalidNameInputHandler, todoIdDataAttrName } from \"../app.common\";\r\nimport { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\nimport { findElement, setAttrElements, templateClone } from \"../utils\";\r\n\r\nexport function todoRenamePanelController(di: Dependencies, todo: Todo | CompletedTodo): DocumentFragment {\r\n    let fragment = templateClone(\"todoRenamePanelTemplate\");\r\n    let input = findElement(fragment, \"input[name='name']\");\r\n    let inputId = input.getAttribute(\"id\");\r\n    let newInputId = `${inputId}-${todo.id}`;\r\n    let label = findElement(fragment, `label[for='${inputId}']`);\r\n    input.setAttribute(\"id\", newInputId);\r\n    input.setAttribute(\"value\", todo.name);\r\n    label.setAttribute(\"for\", newInputId);\r\n    setAttrElements(fragment, todoIdDataAttrName, todo.id);\r\n    $(input).on(\"invalid\", invalidNameInputHandler);\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/todo-rename-panel-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\nimport { fillContentElements, templateClone } from \"../utils\";\r\n\r\nexport function todoTitleController(di: Dependencies, todo: Todo | CompletedTodo): DocumentFragment {\r\n    let titleFragment = document.createDocumentFragment();\r\n    titleFragment.textContent = todo.name;\r\n    if (todo.isCompleted) {\r\n        let completionDateFragment = templateClone(\"todoCompletionDateTemplate\");\r\n        let date = new Date((todo as CompletedTodo).completionTimestamp);\r\n        fillContentElements(completionDateFragment, \"completionDate\", date.toLocaleDateString());\r\n        titleFragment.appendChild(completionDateFragment);\r\n    }\r\n    return titleFragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/todo-title-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\nimport { fillControllerElements, templateClone } from \"../utils\";\r\n\r\nexport function todoTitlePanelController(di: Dependencies, todo: Todo | CompletedTodo): DocumentFragment {\r\n    let fragment = templateClone(\"todoTitlePanelTemplate\");\r\n    fillControllerElements(fragment, \"todoTitleController\", di.todoTitleController(di, todo));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/todo-title-panel-controller.ts","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/idb/lib/idb.js\n// module id = 28\n// module chunks = 0","import { refreshBody, refreshLists } from \"./app.common\";\r\nimport { addTodoFormController } from \"./controllers/add-todo-form-controller\";\r\nimport { bodyController } from \"./controllers/body-controller\";\r\nimport { completedTodoListController } from \"./controllers/completed-todo-list-controller\";\r\nimport { eventListController } from \"./controllers/event-list-controller\";\r\nimport { eventListGroupController } from \"./controllers/event-list-group-controller\";\r\nimport { eventTextController } from \"./controllers/event-text-controller\";\r\nimport { historyTodoController } from \"./controllers/history-todo-controller\";\r\nimport { historyTodoListPanelController } from \"./controllers/history-todo-list-panel-controller\";\r\nimport { historyTodoTitlePanelController } from \"./controllers/history-todo-title-panel-controller\";\r\nimport { incompleteTodoListController } from \"./controllers/incomplete-todo-list-controller\";\r\nimport { todoActionsPanelButtonsController } from \"./controllers/todo-actions-panel-buttons-controller\";\r\nimport { todoActionsPanelController } from \"./controllers/todo-actions-panel-controller\";\r\nimport { todoController } from \"./controllers/todo-controller\";\r\nimport { todoListController } from \"./controllers/todo-list-controller\";\r\nimport { todoListGroupController } from \"./controllers/todo-list-group-controller\";\r\nimport { todoListPanelController } from \"./controllers/todo-list-panel-controller\";\r\nimport { todoRenamePanelController } from \"./controllers/todo-rename-panel-controller\";\r\nimport { todoTitleController } from \"./controllers/todo-title-controller\";\r\nimport { todoTitlePanelController } from \"./controllers/todo-title-panel-controller\";\r\nimport { Dependencies } from \"./dependencies\";\r\nimport { todoListEvents } from \"./read\";\r\nimport \"./site.css\";\r\nimport { fillControllerElements } from \"./utils\";\r\n\r\nif (!window.indexedDB) {\r\n    window.alert(\"Your browser doesn't support IndexedDB (the browser feature this app uses to store your To-dos). Update your browser to its latest version.\");\r\n}\r\n\r\nconst di: Dependencies = {\r\n    bodyController,\r\n    todoListPanelController,\r\n    addTodoFormController,\r\n    incompleteTodoListController,\r\n    completedTodoListController,\r\n    todoListController,\r\n    todoListGroupController,\r\n    todoController,\r\n    todoTitlePanelController,\r\n    todoTitleController,\r\n    todoActionsPanelController,\r\n    todoActionsPanelButtonsController,\r\n    todoRenamePanelController,\r\n    eventListController,\r\n    eventListGroupController,\r\n    eventTextController,\r\n    refreshLists,\r\n    refreshBody,\r\n    historyTodoListPanelController,\r\n    historyTodoController,\r\n    historyTodoTitlePanelController,\r\n};\r\n\r\ntodoListEvents()\r\n    .then(events => {\r\n        fillControllerElements(document, \"bodyController\", di.bodyController(di, events));\r\n    }).catch(console.log);\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./app.ts","import { AggregateIdType, DomainEvent, DomainEventType, UncommittedDomainEvent } from \"../event-store\";\r\n\r\nexport type DomainEventHandler = (e: UncommittedDomainEvent) => void;\r\n\r\nexport abstract class AggregateRoot {\r\n    [key: string]: any;\r\n    private _uncommittedEvents: UncommittedDomainEvent[];\r\n    get uncommittedEvents(): UncommittedDomainEvent[] {\r\n        return this._uncommittedEvents;\r\n    }\r\n    protected _id: AggregateIdType;\r\n    get id(): AggregateIdType {\r\n        return this._id;\r\n    }\r\n    protected init(): void {\r\n        this._uncommittedEvents = new Array<UncommittedDomainEvent>();\r\n    }\r\n    constructor(events: DomainEvent[]) {\r\n        this.init();\r\n        for (const e of events) {\r\n            (this[DomainEventType[e.type]] as DomainEventHandler)(e);\r\n        }\r\n    }\r\n    protected applyAndStage(e: UncommittedDomainEvent): void {\r\n        (this[DomainEventType[e.type]] as DomainEventHandler)(e);\r\n        this._uncommittedEvents.push(e);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./domain/aggregate-root.ts","import { AggregateIdType, DomainEventType, UncommittedDomainEvent } from \"../event-store\";\r\nimport { TodoIdType } from \"./todo\";\r\n\r\nexport class TodoAdded implements UncommittedDomainEvent {\r\n    readonly type = DomainEventType.TodoAdded;\r\n    constructor(\r\n        readonly aggregateId: AggregateIdType,\r\n        readonly todoId: TodoIdType,\r\n        readonly todoName: string,\r\n    ) { }\r\n}\r\n\r\nexport class TodoRemoved implements UncommittedDomainEvent {\r\n    readonly type = DomainEventType.TodoRemoved;\r\n    constructor(\r\n        readonly aggregateId: AggregateIdType,\r\n        readonly todoId: TodoIdType,\r\n    ) { }\r\n}\r\n\r\nexport class TodoCompleted implements UncommittedDomainEvent {\r\n    readonly type = DomainEventType.TodoCompleted;\r\n    constructor(\r\n        readonly aggregateId: AggregateIdType,\r\n        readonly todoId: TodoIdType,\r\n        readonly todoCompletionTimestamp: number,\r\n    ) { }\r\n}\r\n\r\nexport class TodoUncompleted implements UncommittedDomainEvent {\r\n    readonly type = DomainEventType.TodoUncompleted;\r\n    constructor(\r\n        readonly aggregateId: AggregateIdType,\r\n        readonly todoId: TodoIdType,\r\n    ) { }\r\n}\r\n\r\nexport class TodoRenamed implements UncommittedDomainEvent {\r\n    readonly type = DomainEventType.TodoRenamed;\r\n    constructor(\r\n        readonly aggregateId: AggregateIdType,\r\n        readonly todoId: TodoIdType,\r\n        readonly todoName: string,\r\n    ) { }\r\n}\r\n\r\nexport class TodoPositionChanged implements UncommittedDomainEvent {\r\n    readonly type = DomainEventType.TodoPositionChanged;\r\n    constructor(\r\n        readonly aggregateId: AggregateIdType,\r\n        readonly todoId: TodoIdType,\r\n        readonly todoOffset: number,\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./domain/events.ts","export type TodoIdType = string;\r\n\r\nexport class Todo {\r\n    readonly isCompleted: boolean = false;\r\n    constructor(\r\n        readonly id: TodoIdType,\r\n        public name: string,\r\n    ) { }\r\n}\r\n\r\nexport class CompletedTodo extends Todo {\r\n    readonly isCompleted: boolean = true;\r\n    constructor(\r\n        id: TodoIdType,\r\n        name: string,\r\n        readonly completionTimestamp: number,\r\n    ) {\r\n        super(id, name);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./domain/todo.ts","// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/v1.js\n// module id = 33\n// module chunks = 0","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/v4.js\n// module id = 34\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 35\n// module chunks = 0"],"sourceRoot":""}