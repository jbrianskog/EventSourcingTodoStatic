{"version":3,"sources":["webpack:///bundle.2e9b51a73eef495c65f5.js","webpack:///webpack/bootstrap a8b61bf80b89a53f306d","webpack:///./utils.ts","webpack:///./app.common.ts","webpack:///./event-store.ts","webpack:///./~/uuid/index.js","webpack:///./domain/todo-list.ts","webpack:///./controllers/history-todo-controller.ts","webpack:///./read.ts","webpack:///./~/uuid/lib/bytesToUuid.js","webpack:///./~/uuid/lib/rng-browser.js","webpack:///./controllers/add-todo-form-controller.ts","webpack:///./controllers/body-controller.ts","webpack:///./controllers/completed-todo-list-controller.ts","webpack:///./controllers/event-list-controller.ts","webpack:///./controllers/event-list-group-controller.ts","webpack:///./controllers/event-text-controller.ts","webpack:///./controllers/history-todo-list-panel-controller.ts","webpack:///./controllers/history-todo-title-panel-controller.ts","webpack:///./controllers/incomplete-todo-list-controller.ts","webpack:///./controllers/todo-actions-panel-buttons-controller.ts","webpack:///./controllers/todo-actions-panel-controller.ts","webpack:///./controllers/todo-controller.ts","webpack:///./controllers/todo-list-controller.ts","webpack:///./controllers/todo-list-group-controller.ts","webpack:///./controllers/todo-list-panel-controller.ts","webpack:///./controllers/todo-rename-panel-controller.ts","webpack:///./controllers/todo-title-controller.ts","webpack:///./controllers/todo-title-panel-controller.ts","webpack:///./~/idb/lib/idb.js","webpack:///./app.ts","webpack:///./domain/aggregate-root.ts","webpack:///./domain/events.ts","webpack:///./domain/todo.ts","webpack:///./~/uuid/v1.js","webpack:///./~/uuid/v4.js","webpack:///(webpack)/buildin/global.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","templateClone","id","selector","template","document","querySelector","Error","importNode","content","fillControllerElements","parentNode","controllerName","newChild","elems","findControllerElements","Array","forEach","e","innerHTML","appendChild","findAllElements","fillContentElements","propName","findContentElements","textContent","setAttrElements","attrName","findAttrElements","setAttribute","findElement","element","elements","querySelectorAll","length","getRequiredAttribute","attributeName","getAttribute","refreshLists","di","todoListId","__awaiter","this","events","event_store_1","domainEventsByAggregate","todoList","todo_list_1","TodoList","utils_1","incompleteTodoListController","todos","completedTodoListController","completedTodos","eventListController","refreshBody","bodyController","invalidNameInputHandler","clearValidation","$form","removeClass","$button","addClass","off","validationEventNamespace","$input","input","currentTarget","$","closest","next","children","uuid_1","v4","on","validity","valid","focusOutEvent","contains","relatedTarget","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","rejected","result","done","then","apply","todoIdDataAttrName","eventIdDataAttrName","open","idb_1","default","dbName","db","oldVersion","createObjectStore","domainEventStoreName","autoIncrement","keyPath","eventIdPropName","createIndex","aggregateIdPropName","allDomainEvents","version","cursorCallback","cursor","push","continue","tx","transaction","store","objectStore","iterateCursor","IDBKeyRange","upperBound","complete","aggregateId","event","index","postDomainEvents","addPromises","add","all","DomainEventType","v1","uuid","aggregate_root_1","events_1","todo_1","AggregateRoot","_todos","filter","x","isCompleted","sort","y","completionTimestamp","[object Object]","super","init","_id","Todo","todoId","todoName","findIndex","splice","oldTodo","newTodo","CompletedTodo","todoCompletionTimestamp","todo","find","arraySwap","arr","a","incompleteTodoPositions","reduce","from","to","todoOffset","agId","applyAndStage","TodoAdded","TodoRemoved","TodoCompleted","TodoUncompleted","TodoRenamed","offset","TodoPositionChanged","historyTodoController","fragment","historyTodoTitlePanelController","todoListEvents","lists","todoLists","type","indexOf","bytesToUuid","buf","bth","byteToHex","toString","substr","global","rng","crypto","msCrypto","getRandomValues","rnds8","Uint8Array","rnds","r","Math","random","addTodoFormController","submit","read_1","addTodoInput","addTodoForm","reset","uncommittedEvents","app_common_1","preventDefault","catch","console","log","todoListPanelController","createDocumentFragment","todoListController","historyDi","assign","todoController","history_todo_controller_1","eventListDelegatedEventTarget","refreshBodyEventNamespace","e2","originalEvent","which","target","eventId","historyEvents","slice","parseInt","historyTodoListPanelController","eventListGroupController","listItemFragment","eventTextController","todoTitleController","todoActionsPanelButtonsController","todoActionsPanelController","todoTitlePanelController","todoRenamePanelController","todoListGroupController","completeTodoBtnHandler","isComplete","todoActionsBtn","commander","list","Date","now","uncomplete","command","refreshEvents","refreshTodoList","$todoListDelegatedEventTarget","changePosition","remove","val","rename","$defaultPanel","$actionsPanel","$bothPanels","actionsBtnGroup","eventNamespace","toggle","closeEvent","$renamePanel","first","focus","prev","inputId","newInputId","label","titleFragment","completionDateFragment","date","toLocaleDateString","toArray","promisifyRequest","request","onsuccess","onerror","error","promisifyRequestCall","obj","method","args","promisifyCursorRequestCall","Cursor","proxyProperties","ProxyClass","targetProp","properties","prop","set","proxyRequestMethods","Constructor","arguments","proxyMethods","proxyCursorRequestMethods","Index","_index","_cursor","_request","ObjectStore","_store","Transaction","idbTransaction","_tx","oncomplete","onabort","UpgradeDB","_db","DB","IDBIndex","IDBCursor","methodName","IDBObjectStore","IDBTransaction","IDBDatabase","funcName","replace","callback","nativeObject","getAll","query","count","instance","items","undefined","exp","upgradeCallback","indexedDB","onupgradeneeded","delete","add_todo_form_controller_1","body_controller_1","completed_todo_list_controller_1","event_list_controller_1","event_list_group_controller_1","event_text_controller_1","history_todo_list_panel_controller_1","history_todo_title_panel_controller_1","incomplete_todo_list_controller_1","todo_actions_panel_buttons_controller_1","todo_actions_panel_controller_1","todo_controller_1","todo_list_controller_1","todo_list_group_controller_1","todo_list_panel_controller_1","todo_rename_panel_controller_1","todo_title_controller_1","todo_title_panel_controller_1","window","alert","_uncommittedEvents","options","b","clockseq","_clockseq","msecs","getTime","nsecs","_lastNSecs","dt","_lastMSecs","tl","tmh","node","_nodeId","_seedBytes","ii","g","Function","eval"],"mappings":"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","file":"bundle.2e9b51a73eef495c65f5.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 29);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction templateClone(id) {\r\n    let selector = \"template#\" + id;\r\n    let template = document.querySelector(selector);\r\n    if (!template) {\r\n        throw new Error(`Document missing required '${selector}' element`);\r\n    }\r\n    let fragment = document.importNode(template.content, true);\r\n    return fragment;\r\n}\r\nexports.templateClone = templateClone;\r\nfunction fillControllerElements(parentNode, controllerName, newChild) {\r\n    let elems = findControllerElements(parentNode, controllerName);\r\n    // NodeList isn't iterable on Edge, so you can't use array.forEach()\r\n    Array.prototype.forEach.call(elems, (e) => {\r\n        e.innerHTML = \"\";\r\n        e.appendChild(newChild);\r\n    });\r\n}\r\nexports.fillControllerElements = fillControllerElements;\r\nfunction findControllerElements(parentNode, controllerName) {\r\n    let selector = `[data-estd-controller='${controllerName}']`;\r\n    return findAllElements(parentNode, selector);\r\n}\r\nfunction fillContentElements(parentNode, propName, content) {\r\n    let elems = findContentElements(parentNode, propName);\r\n    // NodeList isn't iterable on Edge, so you can't use array.forEach()\r\n    Array.prototype.forEach.call(elems, (e) => {\r\n        e.textContent = content;\r\n    });\r\n}\r\nexports.fillContentElements = fillContentElements;\r\nfunction findContentElements(parentNode, propName) {\r\n    let selector = `[data-estd-content='${propName}']`;\r\n    return findAllElements(parentNode, selector);\r\n}\r\nfunction setAttrElements(parentNode, attrName, value) {\r\n    let elems = findAttrElements(parentNode, attrName);\r\n    // NodeList isn't iterable on Edge, so you can't use array.forEach()\r\n    Array.prototype.forEach.call(elems, (e) => {\r\n        e.setAttribute(attrName, value);\r\n    });\r\n}\r\nexports.setAttrElements = setAttrElements;\r\nfunction findAttrElements(parentNode, attrName) {\r\n    let selector = `[data-estd-attr='${attrName}']`;\r\n    return findAllElements(parentNode, selector);\r\n}\r\nfunction findElement(parentNode, selector) {\r\n    let element = parentNode.querySelector(selector);\r\n    if (!element) {\r\n        throw new Error(`'${parentNode}' missing required '${selector}' element`);\r\n    }\r\n    return element;\r\n}\r\nexports.findElement = findElement;\r\nfunction findAllElements(parentNode, selector) {\r\n    let elements = parentNode.querySelectorAll(selector);\r\n    if (!elements.length) {\r\n        throw new Error(`'${parentNode}' missing required '${selector}' element`);\r\n    }\r\n    return elements;\r\n}\r\nfunction getRequiredAttribute(element, attributeName) {\r\n    let value = element.getAttribute(attributeName);\r\n    if (!value) {\r\n        throw new Error(`'${element}' missing required '${attributeName}' attribute`);\r\n    }\r\n    return value;\r\n}\r\nexports.getRequiredAttribute = getRequiredAttribute;\r\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst uuid_1 = __webpack_require__(3);\r\nconst todo_list_1 = __webpack_require__(4);\r\nconst event_store_1 = __webpack_require__(2);\r\nconst utils_1 = __webpack_require__(0);\r\nexports.todoIdDataAttrName = \"data-estd-todo-id\";\r\nexports.eventIdDataAttrName = \"data-estd-event-id\";\r\nfunction refreshLists(di, todoListId) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        let events = yield event_store_1.domainEventsByAggregate(todoListId);\r\n        let todoList = new todo_list_1.TodoList(events);\r\n        utils_1.fillControllerElements(document, \"incompleteTodoListController\", di.incompleteTodoListController(di, todoList.todos));\r\n        utils_1.fillControllerElements(document, \"completedTodoListController\", di.completedTodoListController(di, todoList.completedTodos));\r\n        utils_1.fillControllerElements(document, \"eventListController\", di.eventListController(di, events));\r\n    });\r\n}\r\nexports.refreshLists = refreshLists;\r\nfunction refreshBody(di, todoListId) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        let events = yield event_store_1.domainEventsByAggregate(todoListId);\r\n        utils_1.fillControllerElements(document, \"bodyController\", di.bodyController(di, events));\r\n    });\r\n}\r\nexports.refreshBody = refreshBody;\r\nfunction invalidNameInputHandler(e) {\r\n    let input = e.currentTarget;\r\n    let $input = $(input);\r\n    let $form = $input.closest(\"form\");\r\n    let $button = $input.next().children(\"button\");\r\n    $form.addClass(\"has-error\");\r\n    $button.removeClass(\"btn-success\").addClass(\"btn-danger\");\r\n    let validationEventNamespace = \".nameTodoInputValidation:\" + uuid_1.v4();\r\n    function clearValidation() {\r\n        $form.removeClass(\"has-error\");\r\n        $button.removeClass(\"btn-danger\").addClass(\"btn-success\");\r\n        $form.off(validationEventNamespace);\r\n        $input.off(validationEventNamespace);\r\n    }\r\n    $input.on(\"input\" + validationEventNamespace, () => {\r\n        if (input.validity.valid) {\r\n            clearValidation();\r\n        }\r\n    });\r\n    $form.on(\"focusout\" + validationEventNamespace, focusOutEvent => {\r\n        if (!focusOutEvent.currentTarget.contains(focusOutEvent.relatedTarget)) {\r\n            clearValidation();\r\n        }\r\n    });\r\n}\r\nexports.invalidNameInputHandler = invalidNameInputHandler;\r\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst idb_1 = __webpack_require__(28);\r\nvar DomainEventType;\r\n(function (DomainEventType) {\r\n    DomainEventType[DomainEventType[\"TodoAdded\"] = 0] = \"TodoAdded\";\r\n    DomainEventType[DomainEventType[\"TodoRemoved\"] = 1] = \"TodoRemoved\";\r\n    DomainEventType[DomainEventType[\"TodoCompleted\"] = 2] = \"TodoCompleted\";\r\n    DomainEventType[DomainEventType[\"TodoUncompleted\"] = 3] = \"TodoUncompleted\";\r\n    DomainEventType[DomainEventType[\"TodoRenamed\"] = 4] = \"TodoRenamed\";\r\n    DomainEventType[DomainEventType[\"TodoPositionChanged\"] = 5] = \"TodoPositionChanged\";\r\n})(DomainEventType = exports.DomainEventType || (exports.DomainEventType = {}));\r\nconst dbName = \"estd-db\";\r\nconst domainEventStoreName = \"domain-event\";\r\nconst aggregateIdPropName = \"aggregateId\";\r\nconst eventIdPropName = \"id\";\r\nfunction open() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        return yield idb_1.default.open(dbName, 1, db => {\r\n            switch (db.oldVersion) {\r\n                case 0:\r\n                    db.createObjectStore(domainEventStoreName, { autoIncrement: true, keyPath: eventIdPropName })\r\n                        .createIndex(aggregateIdPropName, aggregateIdPropName);\r\n            }\r\n        });\r\n    });\r\n}\r\nfunction allDomainEvents(version) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        let db = yield open();\r\n        let events = [];\r\n        let tx = db.transaction(domainEventStoreName);\r\n        let store = tx.objectStore(domainEventStoreName);\r\n        function cursorCallback(cursor) {\r\n            if (!cursor) {\r\n                return;\r\n            }\r\n            events.push(cursor.value);\r\n            // tslint:disable-next-line:no-floating-promises\r\n            cursor.continue();\r\n        }\r\n        // iterateCursor() should be replaced with usage of openCursor() when \"idb\" decides it is safe to do so.\r\n        if (version) {\r\n            store.iterateCursor(IDBKeyRange.upperBound(version), cursorCallback);\r\n        }\r\n        else {\r\n            store.iterateCursor(cursorCallback);\r\n        }\r\n        yield tx.complete;\r\n        return events;\r\n    });\r\n}\r\nexports.allDomainEvents = allDomainEvents;\r\nfunction domainEventsByAggregate(aggregateId, version) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        let db = yield open();\r\n        let events = [];\r\n        let tx = db.transaction(domainEventStoreName);\r\n        let index = tx.objectStore(domainEventStoreName).index(aggregateIdPropName);\r\n        function cursorCallback(cursor) {\r\n            if (!cursor) {\r\n                return;\r\n            }\r\n            let event = cursor.value;\r\n            if (!version || event.id <= version) {\r\n                events.push(event);\r\n            }\r\n            // tslint:disable-next-line:no-floating-promises\r\n            cursor.continue();\r\n        }\r\n        // iterateCursor() should be replaced with usage of openCursor() when \"idb\" decides it is safe to do so.\r\n        index.iterateCursor(cursorCallback);\r\n        yield tx.complete;\r\n        return events;\r\n    });\r\n}\r\nexports.domainEventsByAggregate = domainEventsByAggregate;\r\nfunction postDomainEvents(events) {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        let db = yield open();\r\n        let tx = db.transaction(domainEventStoreName, \"readwrite\");\r\n        let store = tx.objectStore(domainEventStoreName);\r\n        let addPromises = [];\r\n        for (const e of events) {\r\n            addPromises.push(store.add(e));\r\n        }\r\n        yield Promise.all(addPromises);\r\n        yield tx.complete;\r\n    });\r\n}\r\nexports.postDomainEvents = postDomainEvents;\r\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar v1 = __webpack_require__(33);\nvar v4 = __webpack_require__(34);\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst uuid_1 = __webpack_require__(3);\r\nconst aggregate_root_1 = __webpack_require__(30);\r\nconst events_1 = __webpack_require__(31);\r\nconst todo_1 = __webpack_require__(32);\r\nclass TodoList extends aggregate_root_1.AggregateRoot {\r\n    get todos() {\r\n        return this._todos.filter(x => !x.isCompleted);\r\n    }\r\n    get completedTodos() {\r\n        return this._todos.filter(x => x.isCompleted)\r\n            .sort((x, y) => y.completionTimestamp - x.completionTimestamp);\r\n    }\r\n    init() {\r\n        super.init();\r\n        this._todos = [];\r\n    }\r\n    // Domain Event Handlers\r\n    TodoAdded(e) {\r\n        if (!this.id) {\r\n            this._id = e.aggregateId;\r\n        }\r\n        this._todos.push(new todo_1.Todo(e.todoId, e.todoName));\r\n    }\r\n    TodoRemoved(e) {\r\n        let i = this._todos.findIndex(x => x.id === e.todoId);\r\n        if (i !== -1) {\r\n            this._todos.splice(i, 1);\r\n        }\r\n    }\r\n    TodoCompleted(e) {\r\n        let i = this._todos.findIndex(x => x.id === e.todoId);\r\n        if (i !== -1) {\r\n            let oldTodo = this._todos[i];\r\n            let newTodo = new todo_1.CompletedTodo(oldTodo.id, oldTodo.name, e.todoCompletionTimestamp);\r\n            this._todos[i] = newTodo;\r\n        }\r\n    }\r\n    TodoUncompleted(e) {\r\n        let i = this._todos.findIndex(x => x.id === e.todoId);\r\n        if (i !== -1) {\r\n            let oldTodo = this._todos[i];\r\n            let newTodo = new todo_1.Todo(oldTodo.id, oldTodo.name);\r\n            this._todos[i] = newTodo;\r\n        }\r\n    }\r\n    TodoRenamed(e) {\r\n        let todo = this._todos.find(x => x.id === e.todoId);\r\n        if (todo) {\r\n            todo.name = e.todoName;\r\n        }\r\n    }\r\n    TodoPositionChanged(e) {\r\n        let incompleteTodoPositions = this._todos.reduce((p, c, i) => {\r\n            if (!c.isCompleted) {\r\n                p.push(i);\r\n            }\r\n            return p;\r\n        }, []);\r\n        let from = incompleteTodoPositions.findIndex(x => this._todos[x].id === e.todoId);\r\n        if (from === -1) {\r\n            return;\r\n        }\r\n        let to = from + e.todoOffset;\r\n        if (to < 0) {\r\n            to = 0;\r\n        }\r\n        else if (to > incompleteTodoPositions.length - 1) {\r\n            to = incompleteTodoPositions.length - 1;\r\n        }\r\n        if (from === to) {\r\n            return;\r\n        }\r\n        if (to < from) {\r\n            for (let i = to; i < from; i++) {\r\n                arraySwap(this._todos, incompleteTodoPositions[from], incompleteTodoPositions[i]);\r\n            }\r\n        }\r\n        else {\r\n            for (let i = to; i > from; i--) {\r\n                arraySwap(this._todos, incompleteTodoPositions[from], incompleteTodoPositions[i]);\r\n            }\r\n        }\r\n        function arraySwap(arr, x, y) {\r\n            let a = arr[x];\r\n            arr[x] = arr[y];\r\n            arr[y] = a;\r\n        }\r\n    }\r\n    add(id, name) {\r\n        let agId = this.id || uuid_1.v4();\r\n        this.applyAndStage(new events_1.TodoAdded(agId, id, name));\r\n    }\r\n    remove(id) {\r\n        this.applyAndStage(new events_1.TodoRemoved(this.id, id));\r\n    }\r\n    complete(id, completionTimestamp) {\r\n        this.applyAndStage(new events_1.TodoCompleted(this.id, id, completionTimestamp));\r\n    }\r\n    uncomplete(id) {\r\n        this.applyAndStage(new events_1.TodoUncompleted(this.id, id));\r\n    }\r\n    rename(id, name) {\r\n        this.applyAndStage(new events_1.TodoRenamed(this.id, id, name));\r\n    }\r\n    changePosition(id, offset) {\r\n        this.applyAndStage(new events_1.TodoPositionChanged(this.id, id, offset));\r\n    }\r\n}\r\nexports.TodoList = TodoList;\r\n\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(0);\r\nfunction historyTodoController(di, todo) {\r\n    let fragment = (todo.isCompleted)\r\n        ? utils_1.templateClone(\"historyCompletedTodoTemplate\")\r\n        : utils_1.templateClone(\"historyTodoTemplate\");\r\n    utils_1.fillControllerElements(fragment, \"historyTodoTitlePanelController\", di.historyTodoTitlePanelController(di, todo));\r\n    return fragment;\r\n}\r\nexports.historyTodoController = historyTodoController;\r\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst event_store_1 = __webpack_require__(2);\r\nfunction todoListEvents() {\r\n    return __awaiter(this, void 0, void 0, function* () {\r\n        // This app's domain and event-store are designed to accommodate multiple aggregates of different types.\r\n        // Currently, the app only has one aggregate type (TodoList) and only allows the user to have one instance of that aggregate.\r\n        // This todoLists() lookup occurs to get the aggregateId of the user's one TodoList.\r\n        let events = yield event_store_1.allDomainEvents();\r\n        let lists = todoLists(events);\r\n        return (lists.length)\r\n            ? yield event_store_1.domainEventsByAggregate(lists[0])\r\n            : [];\r\n    });\r\n}\r\nexports.todoListEvents = todoListEvents;\r\nfunction todoLists(events) {\r\n    return events.reduce((p, c) => {\r\n        if (c.type === event_store_1.DomainEventType.TodoAdded && p.indexOf(c.aggregateId) === -1) {\r\n            p.push(c.aggregateId);\r\n        }\r\n        return p;\r\n    }, []);\r\n}\r\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports) {\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(35)))\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst uuid_1 = __webpack_require__(3);\r\nconst app_common_1 = __webpack_require__(1);\r\nconst todo_list_1 = __webpack_require__(4);\r\nconst event_store_1 = __webpack_require__(2);\r\nconst read_1 = __webpack_require__(6);\r\nconst utils_1 = __webpack_require__(0);\r\nfunction addTodoFormController(di, todoListId) {\r\n    let fragment = utils_1.templateClone(\"addTodoFormTemplate\");\r\n    let addTodoForm = utils_1.findElement(fragment, \"#addTodoForm\");\r\n    let addTodoInput = utils_1.findElement(addTodoForm, \"#addTodoInput\");\r\n    $(addTodoInput).on(\"invalid\", app_common_1.invalidNameInputHandler);\r\n    // This is to deal with the possibility that the user opens the app for the first time in two tabs\r\n    // and adds a to-do to each new TodoList. TodoList ids are generated when the first Todo is\r\n    // added to them. So, on first load, there are no Todos and no TodoLists, and this handler\r\n    // can't know whether to create a new TodoList or load one that might have been made in another tab.\r\n    // So, if the current TodoList has no id -- i.e. no todos have been added -- we check if any other\r\n    // tab has added a new TodoList and use that id.\r\n    function submit() {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let events = (todoListId)\r\n                ? yield event_store_1.domainEventsByAggregate(todoListId)\r\n                : yield read_1.todoListEvents();\r\n            let todoList = new todo_list_1.TodoList(events);\r\n            todoList.add(uuid_1.v4(), addTodoInput.value);\r\n            addTodoForm.reset();\r\n            // This assignment is only necessary when the first Todo is added to a new TodoList.\r\n            todoListId = todoList.id;\r\n            yield event_store_1.postDomainEvents(todoList.uncommittedEvents);\r\n            yield di.refreshLists(di, todoListId);\r\n        });\r\n    }\r\n    $(addTodoForm).submit(e => {\r\n        e.preventDefault();\r\n        submit().catch(console.log);\r\n    });\r\n    return fragment;\r\n}\r\nexports.addTodoFormController = addTodoFormController;\r\n\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(0);\r\nfunction bodyController(di, events) {\r\n    let fragment = utils_1.templateClone(\"bodyTemplate\");\r\n    utils_1.fillControllerElements(fragment, \"todoListPanelController\", di.todoListPanelController(di, events));\r\n    utils_1.fillControllerElements(fragment, \"eventListController\", di.eventListController(di, events));\r\n    return fragment;\r\n}\r\nexports.bodyController = bodyController;\r\n\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(0);\r\nfunction completedTodoListController(di, todos) {\r\n    if (!todos.length) {\r\n        return document.createDocumentFragment();\r\n    }\r\n    let fragment = utils_1.templateClone(\"completedTodoListTemplate\");\r\n    utils_1.fillControllerElements(fragment, \"todoListController\", di.todoListController(di, todos));\r\n    return fragment;\r\n}\r\nexports.completedTodoListController = completedTodoListController;\r\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst uuid_1 = __webpack_require__(3);\r\nconst app_common_1 = __webpack_require__(1);\r\nconst utils_1 = __webpack_require__(0);\r\nconst history_todo_controller_1 = __webpack_require__(5);\r\nfunction eventListController(di, events) {\r\n    if (!events.length) {\r\n        return utils_1.templateClone(\"emptyEventListTemplate\");\r\n    }\r\n    let todoListId = events[0].aggregateId;\r\n    let fragment = utils_1.templateClone(\"eventListTemplate\");\r\n    let historyDi = Object.assign({}, di);\r\n    historyDi.todoController = history_todo_controller_1.historyTodoController;\r\n    let eventListDelegatedEventTarget = utils_1.findElement(fragment, \"#eventListDelegatedEventTarget\");\r\n    let $eventListDelegatedEventTarget = $(eventListDelegatedEventTarget);\r\n    $eventListDelegatedEventTarget.on(\"click\", \".event-list-item\", e => {\r\n        let refreshBodyEventNamespace = \".activeEventFocusOut:\" + uuid_1.v4();\r\n        // This handler will reset the body to the interactive todolist when the user clicks\r\n        // anywhere in the document outside of the event list.\r\n        $(document).on(`click${refreshBodyEventNamespace} keypress${refreshBodyEventNamespace}`, e2 => {\r\n            // Short-circuit when handler is triggered by event that created it\r\n            // or when isn't an 'enter' keypress\r\n            // or when the event-list-item contains the click target\r\n            if (e.originalEvent === e2.originalEvent\r\n                || (e2.type === \"keypress\" && e2.which !== 13)\r\n                || e.currentTarget.contains(e2.target)) {\r\n                return;\r\n            }\r\n            $(document).off(refreshBodyEventNamespace);\r\n            if (!eventListDelegatedEventTarget.contains(e2.target)) {\r\n                di.refreshBody(di, todoListId)\r\n                    .catch(console.log);\r\n            }\r\n        });\r\n        let eventId = utils_1.getRequiredAttribute(e.currentTarget, app_common_1.eventIdDataAttrName);\r\n        let historyEvents = events.slice(0, parseInt(eventId, 10));\r\n        utils_1.fillControllerElements(document, \"todoListPanelController\", historyDi.historyTodoListPanelController(historyDi, historyEvents));\r\n    });\r\n    utils_1.fillControllerElements(fragment, \"eventListGroupController\", di.eventListGroupController(di, events));\r\n    return fragment;\r\n}\r\nexports.eventListController = eventListController;\r\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst app_common_1 = __webpack_require__(1);\r\nconst utils_1 = __webpack_require__(0);\r\nfunction eventListGroupController(di, events) {\r\n    if (events.length) {\r\n        let fragment = document.createDocumentFragment();\r\n        events.forEach(e => {\r\n            let listItemFragment = utils_1.templateClone(\"eventListItemTemplate\");\r\n            utils_1.setAttrElements(listItemFragment, app_common_1.eventIdDataAttrName, e.id.toString());\r\n            utils_1.fillControllerElements(listItemFragment, \"eventTextController\", di.eventTextController(di, e));\r\n            fragment.appendChild(listItemFragment);\r\n        });\r\n        return fragment;\r\n    }\r\n    else {\r\n        let fragment = utils_1.templateClone(\"emptyEventListTemplate\");\r\n        return fragment;\r\n    }\r\n}\r\nexports.eventListGroupController = eventListGroupController;\r\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst event_store_1 = __webpack_require__(2);\r\nfunction eventTextController(di, event) {\r\n    let fragment = document.createDocumentFragment();\r\n    fragment.textContent = `${event.id} : ${event_store_1.DomainEventType[event.type]}`;\r\n    return fragment;\r\n}\r\nexports.eventTextController = eventTextController;\r\n\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst todo_list_1 = __webpack_require__(4);\r\nconst utils_1 = __webpack_require__(0);\r\nfunction historyTodoListPanelController(di, events) {\r\n    let fragment = utils_1.templateClone(\"historyTodoListPanelTemplate\");\r\n    let todoList = new todo_list_1.TodoList(events);\r\n    utils_1.fillControllerElements(fragment, \"incompleteTodoListController\", di.incompleteTodoListController(di, todoList.todos));\r\n    utils_1.fillControllerElements(fragment, \"completedTodoListController\", di.completedTodoListController(di, todoList.completedTodos));\r\n    return fragment;\r\n}\r\nexports.historyTodoListPanelController = historyTodoListPanelController;\r\n\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(0);\r\nfunction historyTodoTitlePanelController(di, todo) {\r\n    let fragment = utils_1.templateClone(\"historyTodoTitlePanelTemplate\");\r\n    utils_1.fillControllerElements(fragment, \"todoTitleController\", di.todoTitleController(di, todo));\r\n    return fragment;\r\n}\r\nexports.historyTodoTitlePanelController = historyTodoTitlePanelController;\r\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(0);\r\nfunction incompleteTodoListController(di, todos) {\r\n    if (!todos.length) {\r\n        return document.createDocumentFragment();\r\n    }\r\n    let fragment = utils_1.templateClone(\"incompleteTodoListTemplate\");\r\n    utils_1.fillControllerElements(fragment, \"todoListController\", di.todoListController(di, todos));\r\n    return fragment;\r\n}\r\nexports.incompleteTodoListController = incompleteTodoListController;\r\n\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst app_common_1 = __webpack_require__(1);\r\nconst utils_1 = __webpack_require__(0);\r\nfunction todoActionsPanelButtonsController(di, todo) {\r\n    let fragment = utils_1.templateClone(\"todoDeleteBtnTemplate\");\r\n    if (!todo.isCompleted) {\r\n        fragment.appendChild(utils_1.templateClone(\"todoMoveUpBtnTemplate\"));\r\n        fragment.appendChild(utils_1.templateClone(\"todoMoveDownBtnTemplate\"));\r\n    }\r\n    fragment.appendChild(utils_1.templateClone(\"todoRenameBtnTemplate\"));\r\n    utils_1.setAttrElements(fragment, app_common_1.todoIdDataAttrName, todo.id);\r\n    return fragment;\r\n}\r\nexports.todoActionsPanelButtonsController = todoActionsPanelButtonsController;\r\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(0);\r\nfunction todoActionsPanelController(di, todo) {\r\n    let fragment = utils_1.templateClone(\"todoActionsPanelTemplate\");\r\n    utils_1.fillControllerElements(fragment, \"todoTitleController\", di.todoTitleController(di, todo));\r\n    utils_1.fillControllerElements(fragment, \"todoActionsPanelButtonsController\", di.todoActionsPanelButtonsController(di, todo));\r\n    return fragment;\r\n}\r\nexports.todoActionsPanelController = todoActionsPanelController;\r\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst app_common_1 = __webpack_require__(1);\r\nconst utils_1 = __webpack_require__(0);\r\nfunction todoController(di, todo) {\r\n    let fragment = (todo.isCompleted)\r\n        ? utils_1.templateClone(\"completedTodoTemplate\")\r\n        : utils_1.templateClone(\"todoTemplate\");\r\n    utils_1.setAttrElements(fragment, app_common_1.todoIdDataAttrName, todo.id);\r\n    utils_1.fillControllerElements(fragment, \"todoTitlePanelController\", di.todoTitlePanelController(di, todo));\r\n    utils_1.fillControllerElements(fragment, \"todoActionsPanelController\", di.todoActionsPanelController(di, todo));\r\n    utils_1.fillControllerElements(fragment, \"todoRenamePanelController\", di.todoRenamePanelController(di, todo));\r\n    return fragment;\r\n}\r\nexports.todoController = todoController;\r\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(0);\r\nfunction todoListController(di, todos) {\r\n    let fragment = utils_1.templateClone(\"todoListTemplate\");\r\n    utils_1.fillControllerElements(fragment, \"todoListGroupController\", di.todoListGroupController(di, todos));\r\n    return fragment;\r\n}\r\nexports.todoListController = todoListController;\r\n\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nfunction todoListGroupController(di, todos) {\r\n    let fragment = document.createDocumentFragment();\r\n    for (const todo of todos) {\r\n        fragment.appendChild(di.todoController(di, todo));\r\n    }\r\n    return fragment;\r\n}\r\nexports.todoListGroupController = todoListGroupController;\r\n\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst uuid_1 = __webpack_require__(3);\r\nconst app_common_1 = __webpack_require__(1);\r\nconst todo_list_1 = __webpack_require__(4);\r\nconst event_store_1 = __webpack_require__(2);\r\nconst utils_1 = __webpack_require__(0);\r\nfunction todoListPanelController(di, events) {\r\n    let fragment = utils_1.templateClone(\"todoListPanelTemplate\");\r\n    let todoList = new todo_list_1.TodoList(events);\r\n    let todoListId = todoList.id;\r\n    let $todoListDelegatedEventTarget = $(utils_1.findElement(fragment, \"#todolistDelegatedEventTarget\"));\r\n    // Need to handle keypress here because the completeTodoBtn is an <a> without an href,\r\n    // so tabbing to it and pressing enter doesn't trigger a click event like it would with a <button>.\r\n    // I want completeTodoBtn to act like a <button>, but it has another <button> inside of it (todoActionsBtn),\r\n    // so browsers and Bootstrap styling wouldn't work if it was a <button> (HTML spec says no interactive content\r\n    // inside interactive content). By using an <a> with no href I get the a.list-group-item Bootstrap styling.\r\n    $todoListDelegatedEventTarget.on(\"click keypress\", \".completeTodoBtn\", e => {\r\n        completeTodoBtnHandler(e, true);\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"click keypress\", \".uncompleteTodoBtn\", e => {\r\n        completeTodoBtnHandler(e, false);\r\n    });\r\n    function completeTodoBtnHandler(e, isComplete) {\r\n        // only handle \"enter\" keypresses\r\n        if (e.type === \"keypress\" && e.which !== 13) {\r\n            return;\r\n        }\r\n        // short-circuit if this event has bubbled up from the todoActionsBtn (which is inside (un)complete todo buttons)\r\n        let todoActionsBtn = $(e.currentTarget).find(\".todoActionsBtn\")[0];\r\n        if (todoActionsBtn === e.target || $.contains(todoActionsBtn, e.target)) {\r\n            return;\r\n        }\r\n        commander(e, (list, id) => {\r\n            if (isComplete) {\r\n                list.complete(id, Date.now());\r\n            }\r\n            else {\r\n                list.uncomplete(id);\r\n            }\r\n        }).catch(console.log);\r\n    }\r\n    $todoListDelegatedEventTarget.on(\"click\", \".moveTodoUpBtn\", e => {\r\n        commander(e, (list, id) => {\r\n            list.changePosition(id, -1);\r\n        }).catch(console.log);\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"click\", \".moveTodoDownBtn\", e => {\r\n        commander(e, (list, id) => {\r\n            list.changePosition(id, 1);\r\n        }).catch(console.log);\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"click\", \".deleteTodoBtn\", e => {\r\n        commander(e, (list, id) => {\r\n            list.remove(id);\r\n        }).catch(console.log);\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"submit\", \".renameTodoForm\", e => {\r\n        e.preventDefault();\r\n        let todoName = $(e.currentTarget).find(\"input[name='name']\").val();\r\n        commander(e, (list, id) => {\r\n            list.rename(id, todoName);\r\n        }).catch(console.log);\r\n    });\r\n    function commander(e, command) {\r\n        return __awaiter(this, void 0, void 0, function* () {\r\n            let refreshEvents = yield event_store_1.domainEventsByAggregate(todoListId);\r\n            let refreshTodoList = new todo_list_1.TodoList(refreshEvents);\r\n            let todoId = utils_1.getRequiredAttribute(e.currentTarget, app_common_1.todoIdDataAttrName);\r\n            command(refreshTodoList, todoId);\r\n            yield event_store_1.postDomainEvents(refreshTodoList.uncommittedEvents);\r\n            yield di.refreshLists(di, todoListId);\r\n        });\r\n    }\r\n    $todoListDelegatedEventTarget.on(\"click\", \".todoActionsBtn\", e => {\r\n        let $defaultPanel = $(e.currentTarget).closest(\".todoPanelDefault\");\r\n        let $actionsPanel = $defaultPanel.next();\r\n        let $bothPanels = $defaultPanel.add($actionsPanel);\r\n        let actionsBtnGroup = $actionsPanel.find(\".todoActionsPanelBtnGroup\")[0];\r\n        let eventNamespace = \"click.todoActionsPanelClose:\" + uuid_1.v4();\r\n        $bothPanels.toggle();\r\n        // This handler will close (i.e. toggle) the ActionsPanel when the user clicks anywhere in the document outside of the actionsBtnGroup.\r\n        // eventNamespace is unique (probably) so each instance of this handler can only detach itself.\r\n        $(document).on(eventNamespace, closeEvent => {\r\n            // Short-circuit when handler is triggered by event that created it.\r\n            // This happens because this handler is created in the todolistDelegatedEventTarget handler but attached to the document.\r\n            // So, when the todolistDelegatedEventTarget handler returns, the click event that triggered it will still bubble to the document.\r\n            if (e.originalEvent === closeEvent.originalEvent) {\r\n                return;\r\n            }\r\n            if (!$.contains(actionsBtnGroup, closeEvent.target)) {\r\n                $bothPanels.toggle();\r\n            }\r\n            $(document).off(eventNamespace);\r\n        });\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"click\", \".renameTodoBtn\", e => {\r\n        let $actionsPanel = $(e.currentTarget).closest(\".todoActionsPanel\");\r\n        let $renamePanel = $actionsPanel.next();\r\n        $actionsPanel.add($renamePanel).toggle();\r\n        $renamePanel.find(\".renameTodoBtnClickFocusTarget\").first().focus();\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"blur\", \".renameTodoForm\", e => {\r\n        if (!(e.relatedTarget && $.contains(e.currentTarget, e.relatedTarget))) {\r\n            let $renamePanel = $(e.currentTarget).closest(\".todoRenamePanel\");\r\n            $renamePanel.prev().prev().add($renamePanel).toggle();\r\n        }\r\n    });\r\n    utils_1.fillControllerElements(fragment, \"addTodoFormController\", di.addTodoFormController(di, todoListId));\r\n    utils_1.fillControllerElements(fragment, \"incompleteTodoListController\", di.incompleteTodoListController(di, todoList.todos));\r\n    utils_1.fillControllerElements(fragment, \"completedTodoListController\", di.completedTodoListController(di, todoList.completedTodos));\r\n    return fragment;\r\n}\r\nexports.todoListPanelController = todoListPanelController;\r\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst app_common_1 = __webpack_require__(1);\r\nconst utils_1 = __webpack_require__(0);\r\nfunction todoRenamePanelController(di, todo) {\r\n    let fragment = utils_1.templateClone(\"todoRenamePanelTemplate\");\r\n    let input = utils_1.findElement(fragment, \"input[name='name']\");\r\n    let inputId = input.getAttribute(\"id\");\r\n    let newInputId = `${inputId}-${todo.id}`;\r\n    let label = utils_1.findElement(fragment, `label[for='${inputId}']`);\r\n    input.setAttribute(\"id\", newInputId);\r\n    input.setAttribute(\"value\", todo.name);\r\n    label.setAttribute(\"for\", newInputId);\r\n    utils_1.setAttrElements(fragment, app_common_1.todoIdDataAttrName, todo.id);\r\n    $(input).on(\"invalid\", app_common_1.invalidNameInputHandler);\r\n    return fragment;\r\n}\r\nexports.todoRenamePanelController = todoRenamePanelController;\r\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(0);\r\nfunction todoTitleController(di, todo) {\r\n    let titleFragment = document.createDocumentFragment();\r\n    titleFragment.textContent = todo.name;\r\n    if (todo.isCompleted) {\r\n        let completionDateFragment = utils_1.templateClone(\"todoCompletionDateTemplate\");\r\n        let date = new Date(todo.completionTimestamp);\r\n        utils_1.fillContentElements(completionDateFragment, \"completionDate\", date.toLocaleDateString());\r\n        titleFragment.appendChild(completionDateFragment);\r\n    }\r\n    return titleFragment;\r\n}\r\nexports.todoTitleController = todoTitleController;\r\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst utils_1 = __webpack_require__(0);\r\nfunction todoTitlePanelController(di, todo) {\r\n    let fragment = utils_1.templateClone(\"todoTitlePanelTemplate\");\r\n    utils_1.fillControllerElements(fragment, \"todoTitleController\", di.todoTitleController(di, todo));\r\n    return fragment;\r\n}\r\nexports.todoTitlePanelController = todoTitlePanelController;\r\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (true) {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst app_common_1 = __webpack_require__(1);\r\nconst add_todo_form_controller_1 = __webpack_require__(10);\r\nconst body_controller_1 = __webpack_require__(11);\r\nconst completed_todo_list_controller_1 = __webpack_require__(12);\r\nconst event_list_controller_1 = __webpack_require__(13);\r\nconst event_list_group_controller_1 = __webpack_require__(14);\r\nconst event_text_controller_1 = __webpack_require__(15);\r\nconst history_todo_controller_1 = __webpack_require__(5);\r\nconst history_todo_list_panel_controller_1 = __webpack_require__(16);\r\nconst history_todo_title_panel_controller_1 = __webpack_require__(17);\r\nconst incomplete_todo_list_controller_1 = __webpack_require__(18);\r\nconst todo_actions_panel_buttons_controller_1 = __webpack_require__(19);\r\nconst todo_actions_panel_controller_1 = __webpack_require__(20);\r\nconst todo_controller_1 = __webpack_require__(21);\r\nconst todo_list_controller_1 = __webpack_require__(22);\r\nconst todo_list_group_controller_1 = __webpack_require__(23);\r\nconst todo_list_panel_controller_1 = __webpack_require__(24);\r\nconst todo_rename_panel_controller_1 = __webpack_require__(25);\r\nconst todo_title_controller_1 = __webpack_require__(26);\r\nconst todo_title_panel_controller_1 = __webpack_require__(27);\r\nconst read_1 = __webpack_require__(6);\r\n__webpack_require__(9);\r\nconst utils_1 = __webpack_require__(0);\r\nif (!window.indexedDB) {\r\n    window.alert(\"Your browser doesn't support IndexedDB (the browser feature this app uses to store your To-dos). Update your browser to its latest version.\");\r\n}\r\nconst di = {\r\n    bodyController: body_controller_1.bodyController,\r\n    todoListPanelController: todo_list_panel_controller_1.todoListPanelController,\r\n    addTodoFormController: add_todo_form_controller_1.addTodoFormController,\r\n    incompleteTodoListController: incomplete_todo_list_controller_1.incompleteTodoListController,\r\n    completedTodoListController: completed_todo_list_controller_1.completedTodoListController,\r\n    todoListController: todo_list_controller_1.todoListController,\r\n    todoListGroupController: todo_list_group_controller_1.todoListGroupController,\r\n    todoController: todo_controller_1.todoController,\r\n    todoTitlePanelController: todo_title_panel_controller_1.todoTitlePanelController,\r\n    todoTitleController: todo_title_controller_1.todoTitleController,\r\n    todoActionsPanelController: todo_actions_panel_controller_1.todoActionsPanelController,\r\n    todoActionsPanelButtonsController: todo_actions_panel_buttons_controller_1.todoActionsPanelButtonsController,\r\n    todoRenamePanelController: todo_rename_panel_controller_1.todoRenamePanelController,\r\n    eventListController: event_list_controller_1.eventListController,\r\n    eventListGroupController: event_list_group_controller_1.eventListGroupController,\r\n    eventTextController: event_text_controller_1.eventTextController,\r\n    refreshLists: app_common_1.refreshLists,\r\n    refreshBody: app_common_1.refreshBody,\r\n    historyTodoListPanelController: history_todo_list_panel_controller_1.historyTodoListPanelController,\r\n    historyTodoController: history_todo_controller_1.historyTodoController,\r\n    historyTodoTitlePanelController: history_todo_title_panel_controller_1.historyTodoTitlePanelController,\r\n};\r\nread_1.todoListEvents()\r\n    .then(events => {\r\n    utils_1.fillControllerElements(document, \"bodyController\", di.bodyController(di, events));\r\n}).catch(console.log);\r\n\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst event_store_1 = __webpack_require__(2);\r\nclass AggregateRoot {\r\n    get uncommittedEvents() {\r\n        return this._uncommittedEvents;\r\n    }\r\n    get id() {\r\n        return this._id;\r\n    }\r\n    init() {\r\n        this._uncommittedEvents = new Array();\r\n    }\r\n    constructor(events) {\r\n        this.init();\r\n        for (const e of events) {\r\n            this[event_store_1.DomainEventType[e.type]](e);\r\n        }\r\n    }\r\n    applyAndStage(e) {\r\n        this[event_store_1.DomainEventType[e.type]](e);\r\n        this._uncommittedEvents.push(e);\r\n    }\r\n}\r\nexports.AggregateRoot = AggregateRoot;\r\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nconst event_store_1 = __webpack_require__(2);\r\nclass TodoAdded {\r\n    constructor(aggregateId, todoId, todoName) {\r\n        this.aggregateId = aggregateId;\r\n        this.todoId = todoId;\r\n        this.todoName = todoName;\r\n        this.type = event_store_1.DomainEventType.TodoAdded;\r\n    }\r\n}\r\nexports.TodoAdded = TodoAdded;\r\nclass TodoRemoved {\r\n    constructor(aggregateId, todoId) {\r\n        this.aggregateId = aggregateId;\r\n        this.todoId = todoId;\r\n        this.type = event_store_1.DomainEventType.TodoRemoved;\r\n    }\r\n}\r\nexports.TodoRemoved = TodoRemoved;\r\nclass TodoCompleted {\r\n    constructor(aggregateId, todoId, todoCompletionTimestamp) {\r\n        this.aggregateId = aggregateId;\r\n        this.todoId = todoId;\r\n        this.todoCompletionTimestamp = todoCompletionTimestamp;\r\n        this.type = event_store_1.DomainEventType.TodoCompleted;\r\n    }\r\n}\r\nexports.TodoCompleted = TodoCompleted;\r\nclass TodoUncompleted {\r\n    constructor(aggregateId, todoId) {\r\n        this.aggregateId = aggregateId;\r\n        this.todoId = todoId;\r\n        this.type = event_store_1.DomainEventType.TodoUncompleted;\r\n    }\r\n}\r\nexports.TodoUncompleted = TodoUncompleted;\r\nclass TodoRenamed {\r\n    constructor(aggregateId, todoId, todoName) {\r\n        this.aggregateId = aggregateId;\r\n        this.todoId = todoId;\r\n        this.todoName = todoName;\r\n        this.type = event_store_1.DomainEventType.TodoRenamed;\r\n    }\r\n}\r\nexports.TodoRenamed = TodoRenamed;\r\nclass TodoPositionChanged {\r\n    constructor(aggregateId, todoId, todoOffset) {\r\n        this.aggregateId = aggregateId;\r\n        this.todoId = todoId;\r\n        this.todoOffset = todoOffset;\r\n        this.type = event_store_1.DomainEventType.TodoPositionChanged;\r\n    }\r\n}\r\nexports.TodoPositionChanged = TodoPositionChanged;\r\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nclass Todo {\r\n    constructor(id, name) {\r\n        this.id = id;\r\n        this.name = name;\r\n        this.isCompleted = false;\r\n    }\r\n}\r\nexports.Todo = Todo;\r\nclass CompletedTodo extends Todo {\r\n    constructor(id, name, completionTimestamp) {\r\n        super(id, name);\r\n        this.completionTimestamp = completionTimestamp;\r\n        this.isCompleted = true;\r\n    }\r\n}\r\nexports.CompletedTodo = CompletedTodo;\r\n\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __webpack_require__) {\n\n// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar rng = __webpack_require__(8);\nvar bytesToUuid = __webpack_require__(7);\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar rng = __webpack_require__(8);\nvar bytesToUuid = __webpack_require__(7);\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// bundle.2e9b51a73eef495c65f5.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 29);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a8b61bf80b89a53f306d","export function templateClone(id: string): DocumentFragment {\r\n    let selector = \"template#\" + id;\r\n    let template = document.querySelector(selector) as HTMLTemplateElement | null;\r\n    if (!template) {\r\n        throw new Error(`Document missing required '${selector}' element`);\r\n    }\r\n    let fragment = document.importNode(template.content, true);\r\n    return fragment;\r\n}\r\n\r\nexport function fillControllerElements(parentNode: NodeSelector, controllerName: string, newChild: DocumentFragment): void {\r\n    let elems = findControllerElements(parentNode, controllerName);\r\n    // NodeList isn't iterable on Edge, so you can't use array.forEach()\r\n    Array.prototype.forEach.call(elems, (e: HTMLElement) => {\r\n        e.innerHTML = \"\";\r\n        e.appendChild(newChild);\r\n    });\r\n}\r\n\r\nfunction findControllerElements(parentNode: NodeSelector, controllerName: string): NodeListOf<HTMLElement> {\r\n    let selector = `[data-estd-controller='${controllerName}']`;\r\n    return findAllElements(parentNode, selector) as NodeListOf<HTMLElement>;\r\n}\r\n\r\nexport function fillContentElements(parentNode: NodeSelector, propName: string, content: string): void {\r\n    let elems = findContentElements(parentNode, propName);\r\n    // NodeList isn't iterable on Edge, so you can't use array.forEach()\r\n    Array.prototype.forEach.call(elems, (e: Element) => {\r\n        e.textContent = content;\r\n    });\r\n}\r\n\r\nfunction findContentElements(parentNode: NodeSelector, propName: string): NodeListOf<Element> {\r\n    let selector = `[data-estd-content='${propName}']`;\r\n    return findAllElements(parentNode, selector);\r\n}\r\n\r\nexport function setAttrElements(parentNode: NodeSelector, attrName: string, value: string): void {\r\n    let elems = findAttrElements(parentNode, attrName);\r\n    // NodeList isn't iterable on Edge, so you can't use array.forEach()\r\n    Array.prototype.forEach.call(elems, (e: Element) => {\r\n        e.setAttribute(attrName, value);\r\n    });\r\n}\r\n\r\nfunction findAttrElements(parentNode: NodeSelector, attrName: string): NodeListOf<Element> {\r\n    let selector = `[data-estd-attr='${attrName}']`;\r\n    return findAllElements(parentNode, selector);\r\n}\r\n\r\nexport function findElement(parentNode: NodeSelector, selector: string): Element {\r\n    let element = parentNode.querySelector(selector);\r\n    if (!element) {\r\n        throw new Error(`'${parentNode}' missing required '${selector}' element`);\r\n    }\r\n    return element;\r\n}\r\n\r\nfunction findAllElements(parentNode: NodeSelector, selector: string): NodeListOf<Element> {\r\n    let elements = parentNode.querySelectorAll(selector);\r\n    if (!elements.length) {\r\n        throw new Error(`'${parentNode}' missing required '${selector}' element`);\r\n    }\r\n    return elements;\r\n}\r\n\r\nexport function getRequiredAttribute(element: Element, attributeName: string): string {\r\n    let value = element.getAttribute(attributeName);\r\n    if (!value) {\r\n        throw new Error(`'${element}' missing required '${attributeName}' attribute`);\r\n    }\r\n    return value;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./utils.ts","import { v4 as uuid } from \"uuid\";\r\nimport { Dependencies } from \"./dependencies\";\r\nimport { TodoList } from \"./domain/todo-list\";\r\nimport { AggregateIdType, domainEventsByAggregate } from \"./event-store\";\r\nimport { fillControllerElements } from \"./utils\";\r\n\r\nexport const todoIdDataAttrName = \"data-estd-todo-id\";\r\nexport const eventIdDataAttrName = \"data-estd-event-id\";\r\n\r\nexport async function refreshLists(di: Dependencies, todoListId: AggregateIdType): Promise<void> {\r\n    let events = await domainEventsByAggregate(todoListId);\r\n    let todoList = new TodoList(events);\r\n    fillControllerElements(document, \"incompleteTodoListController\", di.incompleteTodoListController(di, todoList.todos));\r\n    fillControllerElements(document, \"completedTodoListController\", di.completedTodoListController(di, todoList.completedTodos));\r\n    fillControllerElements(document, \"eventListController\", di.eventListController(di, events));\r\n}\r\n\r\nexport async function refreshBody(di: Dependencies, todoListId: AggregateIdType): Promise<void> {\r\n    let events = await domainEventsByAggregate(todoListId);\r\n    fillControllerElements(document, \"bodyController\", di.bodyController(di, events));\r\n}\r\n\r\nexport function invalidNameInputHandler(e: JQueryEventObject): void {\r\n    let input = e.currentTarget as HTMLInputElement;\r\n    let $input = $(input);\r\n    let $form = $input.closest(\"form\");\r\n    let $button = $input.next().children(\"button\");\r\n    $form.addClass(\"has-error\");\r\n    $button.removeClass(\"btn-success\").addClass(\"btn-danger\");\r\n\r\n    let validationEventNamespace = \".nameTodoInputValidation:\" + uuid();\r\n    function clearValidation(): void {\r\n        $form.removeClass(\"has-error\");\r\n        $button.removeClass(\"btn-danger\").addClass(\"btn-success\");\r\n        $form.off(validationEventNamespace);\r\n        $input.off(validationEventNamespace);\r\n    }\r\n    $input.on(\"input\" + validationEventNamespace, () => {\r\n        if (input.validity.valid) {\r\n            clearValidation();\r\n        }\r\n    });\r\n    $form.on(\"focusout\" + validationEventNamespace, focusOutEvent => {\r\n        if (!focusOutEvent.currentTarget.contains(focusOutEvent.relatedTarget)) {\r\n            clearValidation();\r\n        }\r\n    });\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./app.common.ts","import idb, { Cursor, DB } from \"idb\";\r\n\r\nexport enum DomainEventType {\r\n    TodoAdded,\r\n    TodoRemoved,\r\n    TodoCompleted,\r\n    TodoUncompleted,\r\n    TodoRenamed,\r\n    TodoPositionChanged,\r\n}\r\nexport type AggregateIdType = string;\r\nexport interface UncommittedDomainEvent {\r\n    readonly aggregateId: AggregateIdType;\r\n    readonly type: DomainEventType;\r\n}\r\nexport interface DomainEvent extends UncommittedDomainEvent {\r\n    readonly id: number;\r\n}\r\nexport interface EventStore {\r\n    getAllDomainEvents(version?: number): Promise<DomainEvent[]>;\r\n    getDomainEventsByAggregate(aggregateId: AggregateIdType, version?: number): Promise<DomainEvent[]>;\r\n    postDomainEvents(events: UncommittedDomainEvent[]): Promise<void>;\r\n}\r\n\r\nconst dbName = \"estd-db\";\r\nconst domainEventStoreName = \"domain-event\";\r\nconst aggregateIdPropName = \"aggregateId\";\r\nconst eventIdPropName = \"id\";\r\n\r\nasync function open(): Promise<DB> {\r\n    return await idb.open(dbName, 1, db => {\r\n        switch (db.oldVersion) {\r\n            case 0:\r\n                db.createObjectStore(domainEventStoreName, { autoIncrement: true, keyPath: eventIdPropName })\r\n                    .createIndex(aggregateIdPropName, aggregateIdPropName);\r\n        }\r\n    });\r\n}\r\nexport async function allDomainEvents(version?: number): Promise<DomainEvent[]> {\r\n    let db = await open();\r\n    let events = [] as DomainEvent[];\r\n    let tx = db.transaction(domainEventStoreName);\r\n    let store = tx.objectStore(domainEventStoreName);\r\n    function cursorCallback(cursor: Cursor): void {\r\n        if (!cursor) {\r\n            return;\r\n        }\r\n        events.push(cursor.value as DomainEvent);\r\n        // tslint:disable-next-line:no-floating-promises\r\n        cursor.continue();\r\n    }\r\n    // iterateCursor() should be replaced with usage of openCursor() when \"idb\" decides it is safe to do so.\r\n    if (version) {\r\n        store.iterateCursor(IDBKeyRange.upperBound(version), cursorCallback);\r\n    } else {\r\n        store.iterateCursor(cursorCallback);\r\n    }\r\n    await tx.complete;\r\n    return events;\r\n}\r\n\r\nexport async function domainEventsByAggregate(aggregateId: AggregateIdType, version?: number): Promise<DomainEvent[]> {\r\n    let db = await open();\r\n    let events = [] as DomainEvent[];\r\n    let tx = db.transaction(domainEventStoreName);\r\n    let index = tx.objectStore(domainEventStoreName).index(aggregateIdPropName);\r\n    function cursorCallback(cursor: Cursor): void {\r\n        if (!cursor) {\r\n            return;\r\n        }\r\n        let event = cursor.value as DomainEvent;\r\n        if (!version || event.id <= version) {\r\n            events.push(event);\r\n        }\r\n        // tslint:disable-next-line:no-floating-promises\r\n        cursor.continue();\r\n    }\r\n    // iterateCursor() should be replaced with usage of openCursor() when \"idb\" decides it is safe to do so.\r\n    index.iterateCursor(cursorCallback);\r\n    await tx.complete;\r\n    return events;\r\n}\r\nexport async function postDomainEvents(events: UncommittedDomainEvent[]): Promise<void> {\r\n    let db = await open();\r\n    let tx = db.transaction(domainEventStoreName, \"readwrite\");\r\n    let store = tx.objectStore(domainEventStoreName);\r\n    let addPromises = [];\r\n    for (const e of events) {\r\n        addPromises.push(store.add(e));\r\n    }\r\n    await Promise.all(addPromises);\r\n    await tx.complete;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./event-store.ts","var v1 = require('./v1');\nvar v4 = require('./v4');\n\nvar uuid = v4;\nuuid.v1 = v1;\nuuid.v4 = v4;\n\nmodule.exports = uuid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/index.js\n// module id = 3\n// module chunks = 0","import { v4 as uuid } from \"uuid\";\r\nimport { AggregateRoot } from \"./aggregate-root\";\r\nimport { TodoAdded, TodoCompleted, TodoPositionChanged, TodoRemoved, TodoRenamed, TodoUncompleted } from \"./events\";\r\nimport { CompletedTodo, Todo, TodoIdType } from \"./todo\";\r\n\r\nexport class TodoList extends AggregateRoot {\r\n    protected _todos: (Todo | CompletedTodo)[];\r\n    get todos(): Todo[] {\r\n        return this._todos.filter(x => !x.isCompleted);\r\n    }\r\n    get completedTodos(): CompletedTodo[] {\r\n        return (this._todos.filter(x => x.isCompleted) as CompletedTodo[])\r\n            .sort((x, y) => y.completionTimestamp - x.completionTimestamp);\r\n    }\r\n    protected init(): void {\r\n        super.init();\r\n        this._todos = [];\r\n    }\r\n\r\n    // Domain Event Handlers\r\n    protected TodoAdded(e: TodoAdded): void {\r\n        if (!this.id) {\r\n            this._id = e.aggregateId;\r\n        }\r\n        this._todos.push(new Todo(e.todoId, e.todoName));\r\n    }\r\n    protected TodoRemoved(e: TodoRemoved): void {\r\n        let i = this._todos.findIndex(x => x.id === e.todoId);\r\n        if (i !== -1) {\r\n            this._todos.splice(i, 1);\r\n        }\r\n    }\r\n    protected TodoCompleted(e: TodoCompleted): void {\r\n        let i = this._todos.findIndex(x => x.id === e.todoId);\r\n        if (i !== -1) {\r\n            let oldTodo = this._todos[i];\r\n            let newTodo = new CompletedTodo(oldTodo.id, oldTodo.name, e.todoCompletionTimestamp);\r\n            this._todos[i] = newTodo;\r\n        }\r\n    }\r\n    protected TodoUncompleted(e: TodoUncompleted): void {\r\n        let i = this._todos.findIndex(x => x.id === e.todoId);\r\n        if (i !== -1) {\r\n            let oldTodo = this._todos[i];\r\n            let newTodo = new Todo(oldTodo.id, oldTodo.name);\r\n            this._todos[i] = newTodo;\r\n        }\r\n    }\r\n    protected TodoRenamed(e: TodoRenamed): void {\r\n        let todo = this._todos.find(x => x.id === e.todoId);\r\n        if (todo) {\r\n            todo.name = e.todoName;\r\n        }\r\n    }\r\n    protected TodoPositionChanged(e: TodoPositionChanged): void {\r\n        let incompleteTodoPositions: number[] = this._todos.reduce<number[]>((p, c, i) => {\r\n            if (!c.isCompleted) {\r\n                p.push(i);\r\n            }\r\n            return p;\r\n        }, []);\r\n        let from = incompleteTodoPositions.findIndex(x => this._todos[x].id === e.todoId);\r\n        if (from === -1) {\r\n            return;\r\n        }\r\n        let to = from + e.todoOffset;\r\n        if (to < 0) {\r\n            to = 0;\r\n        } else if (to > incompleteTodoPositions.length - 1) {\r\n            to = incompleteTodoPositions.length - 1;\r\n        }\r\n        if (from === to) {\r\n            return;\r\n        }\r\n        if (to < from) {\r\n            for (let i = to; i < from; i++) {\r\n                arraySwap(this._todos, incompleteTodoPositions[from], incompleteTodoPositions[i]);\r\n            }\r\n        } else {\r\n            for (let i = to; i > from; i--) {\r\n                arraySwap(this._todos, incompleteTodoPositions[from], incompleteTodoPositions[i]);\r\n            }\r\n        }\r\n        function arraySwap(arr: any[], x: number, y: number): void {\r\n            let a = arr[x];\r\n            arr[x] = arr[y];\r\n            arr[y] = a;\r\n        }\r\n    }\r\n\r\n    add(id: TodoIdType, name: string): void {\r\n        let agId = this.id || uuid();\r\n        this.applyAndStage(new TodoAdded(agId, id, name));\r\n    }\r\n    remove(id: TodoIdType): void {\r\n        this.applyAndStage(new TodoRemoved(this.id, id));\r\n    }\r\n    complete(id: TodoIdType, completionTimestamp: number): void {\r\n        this.applyAndStage(new TodoCompleted(this.id, id, completionTimestamp));\r\n    }\r\n    uncomplete(id: TodoIdType): void {\r\n        this.applyAndStage(new TodoUncompleted(this.id, id));\r\n    }\r\n    rename(id: TodoIdType, name: string): void {\r\n        this.applyAndStage(new TodoRenamed(this.id, id, name));\r\n    }\r\n    changePosition(id: TodoIdType, offset: number): void {\r\n        this.applyAndStage(new TodoPositionChanged(this.id, id, offset));\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./domain/todo-list.ts","import { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\nimport { fillControllerElements, templateClone } from \"../utils\";\r\n\r\nexport function historyTodoController(di: Dependencies, todo: Todo | CompletedTodo): DocumentFragment {\r\n    let fragment = (todo.isCompleted)\r\n        ? templateClone(\"historyCompletedTodoTemplate\")\r\n        : templateClone(\"historyTodoTemplate\");\r\n    fillControllerElements(fragment, \"historyTodoTitlePanelController\", di.historyTodoTitlePanelController(di, todo));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/history-todo-controller.ts","import { AggregateIdType, allDomainEvents, DomainEvent, domainEventsByAggregate, DomainEventType } from \"./event-store\";\r\n\r\nexport async function todoListEvents(): Promise<DomainEvent[]> {\r\n    // This app's domain and event-store are designed to accommodate multiple aggregates of different types.\r\n    // Currently, the app only has one aggregate type (TodoList) and only allows the user to have one instance of that aggregate.\r\n    // This todoLists() lookup occurs to get the aggregateId of the user's one TodoList.\r\n    let events = await allDomainEvents();\r\n    let lists = todoLists(events);\r\n    return (lists.length)\r\n        ? await domainEventsByAggregate(lists[0])\r\n        : [];\r\n}\r\n\r\nfunction todoLists(events: DomainEvent[]): AggregateIdType[] {\r\n    return events.reduce<AggregateIdType[]>((p, c) => {\r\n        if (c.type === DomainEventType.TodoAdded && p.indexOf(c.aggregateId) === -1) {\r\n            p.push(c.aggregateId);\r\n        }\r\n        return p;\r\n    }, []);\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./read.ts","/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\nvar byteToHex = [];\nfor (var i = 0; i < 256; ++i) {\n  byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction bytesToUuid(buf, offset) {\n  var i = offset || 0;\n  var bth = byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\nmodule.exports = bytesToUuid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/lib/bytesToUuid.js\n// module id = 7\n// module chunks = 0","// Unique ID creation requires a high quality random # generator.  In the\n// browser this is a little complicated due to unknown quality of Math.random()\n// and inconsistent support for the `crypto` API.  We do the best we can via\n// feature-detection\nvar rng;\n\nvar crypto = global.crypto || global.msCrypto; // for IE 11\nif (crypto && crypto.getRandomValues) {\n  // WHATWG crypto RNG - http://wiki.whatwg.org/wiki/Crypto\n  var rnds8 = new Uint8Array(16);\n  rng = function whatwgRNG() {\n    crypto.getRandomValues(rnds8);\n    return rnds8;\n  };\n}\n\nif (!rng) {\n  // Math.random()-based (RNG)\n  //\n  // If all else fails, use Math.random().  It's fast, but is of unspecified\n  // quality.\n  var  rnds = new Array(16);\n  rng = function() {\n    for (var i = 0, r; i < 16; i++) {\n      if ((i & 0x03) === 0) r = Math.random() * 0x100000000;\n      rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;\n    }\n\n    return rnds;\n  };\n}\n\nmodule.exports = rng;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/lib/rng-browser.js\n// module id = 8\n// module chunks = 0","import { v4 as uuid } from \"uuid\";\r\nimport { invalidNameInputHandler } from \"../app.common\";\r\nimport { Dependencies } from \"../dependencies\";\r\nimport { TodoList } from \"../domain/todo-list\";\r\nimport { AggregateIdType, domainEventsByAggregate, postDomainEvents } from \"../event-store\";\r\nimport { todoListEvents } from \"../read\";\r\nimport { findElement, templateClone } from \"../utils\";\r\n\r\nexport function addTodoFormController(di: Dependencies, todoListId: AggregateIdType): DocumentFragment {\r\n    let fragment = templateClone(\"addTodoFormTemplate\");\r\n    let addTodoForm = findElement(fragment, \"#addTodoForm\") as HTMLFormElement;\r\n    let addTodoInput = findElement(addTodoForm, \"#addTodoInput\") as HTMLInputElement;\r\n    $(addTodoInput).on(\"invalid\", invalidNameInputHandler);\r\n    // This is to deal with the possibility that the user opens the app for the first time in two tabs\r\n    // and adds a to-do to each new TodoList. TodoList ids are generated when the first Todo is\r\n    // added to them. So, on first load, there are no Todos and no TodoLists, and this handler\r\n    // can't know whether to create a new TodoList or load one that might have been made in another tab.\r\n    // So, if the current TodoList has no id -- i.e. no todos have been added -- we check if any other\r\n    // tab has added a new TodoList and use that id.\r\n    async function submit(): Promise<void> {\r\n        let events = (todoListId)\r\n            ? await domainEventsByAggregate(todoListId)\r\n            : await todoListEvents();\r\n        let todoList = new TodoList(events);\r\n        todoList.add(uuid(), addTodoInput.value);\r\n        addTodoForm.reset();\r\n        // This assignment is only necessary when the first Todo is added to a new TodoList.\r\n        todoListId = todoList.id;\r\n        await postDomainEvents(todoList.uncommittedEvents);\r\n        await di.refreshLists(di, todoListId);\r\n    }\r\n    $(addTodoForm).submit(e => {\r\n        e.preventDefault();\r\n        submit().catch(console.log);\r\n    });\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/add-todo-form-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { DomainEvent } from \"../event-store\";\r\nimport { fillControllerElements, templateClone } from \"../utils\";\r\n\r\nexport function bodyController(di: Dependencies, events: DomainEvent[]): DocumentFragment {\r\n    let fragment = templateClone(\"bodyTemplate\");\r\n    fillControllerElements(fragment, \"todoListPanelController\", di.todoListPanelController(di, events));\r\n    fillControllerElements(fragment, \"eventListController\", di.eventListController(di, events));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/body-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo } from \"../domain/todo\";\r\nimport { fillControllerElements, templateClone } from \"../utils\";\r\n\r\nexport function completedTodoListController(di: Dependencies, todos: CompletedTodo[]): DocumentFragment {\r\n    if (!todos.length) {\r\n        return document.createDocumentFragment();\r\n    }\r\n    let fragment = templateClone(\"completedTodoListTemplate\");\r\n    fillControllerElements(fragment, \"todoListController\", di.todoListController(di, todos));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/completed-todo-list-controller.ts","import { v4 as uuid } from \"uuid\";\r\nimport { eventIdDataAttrName } from \"../app.common\";\r\nimport { Dependencies } from \"../dependencies\";\r\nimport { DomainEvent } from \"../event-store\";\r\nimport { fillControllerElements, findElement, getRequiredAttribute, templateClone } from \"../utils\";\r\nimport { historyTodoController } from \"./history-todo-controller\";\r\n\r\nexport function eventListController(di: Dependencies, events: DomainEvent[]): DocumentFragment {\r\n    if (!events.length) {\r\n        return templateClone(\"emptyEventListTemplate\");\r\n    }\r\n    let todoListId = events[0].aggregateId;\r\n    let fragment = templateClone(\"eventListTemplate\");\r\n    let historyDi = Object.assign({}, di);\r\n    historyDi.todoController = historyTodoController;\r\n    let eventListDelegatedEventTarget = findElement(fragment, \"#eventListDelegatedEventTarget\");\r\n    let $eventListDelegatedEventTarget = $(eventListDelegatedEventTarget);\r\n    $eventListDelegatedEventTarget.on(\"click\", \".event-list-item\", e => {\r\n        let refreshBodyEventNamespace = \".activeEventFocusOut:\" + uuid();\r\n        // This handler will reset the body to the interactive todolist when the user clicks\r\n        // anywhere in the document outside of the event list.\r\n        $(document).on(`click${refreshBodyEventNamespace} keypress${refreshBodyEventNamespace}`, e2 => {\r\n            // Short-circuit when handler is triggered by event that created it\r\n            // or when isn't an 'enter' keypress\r\n            // or when the event-list-item contains the click target\r\n            if (e.originalEvent === e2.originalEvent\r\n                || (e2.type === \"keypress\" && e2.which !== 13)\r\n                || e.currentTarget.contains(e2.target)) {\r\n                return;\r\n            }\r\n            $(document).off(refreshBodyEventNamespace);\r\n            if (!eventListDelegatedEventTarget.contains(e2.target)) {\r\n                di.refreshBody(di, todoListId)\r\n                .catch(console.log);\r\n            }\r\n        });\r\n        let eventId = getRequiredAttribute(e.currentTarget, eventIdDataAttrName);\r\n        let historyEvents = events.slice(0, parseInt(eventId, 10));\r\n        fillControllerElements(document, \"todoListPanelController\", historyDi.historyTodoListPanelController(historyDi, historyEvents));\r\n    });\r\n    fillControllerElements(fragment, \"eventListGroupController\", di.eventListGroupController(di, events));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/event-list-controller.ts","import { eventIdDataAttrName } from \"../app.common\";\r\nimport { Dependencies } from \"../dependencies\";\r\nimport { DomainEvent } from \"../event-store\";\r\nimport { fillControllerElements, setAttrElements, templateClone } from \"../utils\";\r\n\r\nexport function eventListGroupController(di: Dependencies, events: DomainEvent[]): DocumentFragment {\r\n    if (events.length) {\r\n        let fragment = document.createDocumentFragment();\r\n        events.forEach(e => {\r\n            let listItemFragment = templateClone(\"eventListItemTemplate\");\r\n            setAttrElements(listItemFragment, eventIdDataAttrName, e.id.toString());\r\n            fillControllerElements(listItemFragment, \"eventTextController\", di.eventTextController(di, e));\r\n            fragment.appendChild(listItemFragment);\r\n        });\r\n        return fragment;\r\n    } else {\r\n        let fragment = templateClone(\"emptyEventListTemplate\");\r\n        return fragment;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/event-list-group-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { DomainEvent, DomainEventType } from \"../event-store\";\r\n\r\nexport function eventTextController(di: Dependencies, event: DomainEvent): DocumentFragment {\r\n    let fragment = document.createDocumentFragment();\r\n    fragment.textContent = `${event.id} : ${DomainEventType[event.type]}`;\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/event-text-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { TodoList } from \"../domain/todo-list\";\r\nimport { DomainEvent } from \"../event-store\";\r\nimport { fillControllerElements, templateClone } from \"../utils\";\r\n\r\nexport function historyTodoListPanelController(di: Dependencies, events: DomainEvent[]): DocumentFragment {\r\n    let fragment = templateClone(\"historyTodoListPanelTemplate\");\r\n    let todoList = new TodoList(events);\r\n    fillControllerElements(fragment, \"incompleteTodoListController\", di.incompleteTodoListController(di, todoList.todos));\r\n    fillControllerElements(fragment, \"completedTodoListController\", di.completedTodoListController(di, todoList.completedTodos));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/history-todo-list-panel-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\nimport { fillControllerElements, templateClone } from \"../utils\";\r\n\r\nexport function historyTodoTitlePanelController(di: Dependencies, todo: Todo | CompletedTodo): DocumentFragment {\r\n    let fragment = templateClone(\"historyTodoTitlePanelTemplate\");\r\n    fillControllerElements(fragment, \"todoTitleController\", di.todoTitleController(di, todo));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/history-todo-title-panel-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { Todo } from \"../domain/todo\";\r\nimport { fillControllerElements, templateClone } from \"../utils\";\r\n\r\nexport function incompleteTodoListController(di: Dependencies, todos: Todo[]): DocumentFragment {\r\n    if (!todos.length) {\r\n        return document.createDocumentFragment();\r\n    }\r\n    let fragment = templateClone(\"incompleteTodoListTemplate\");\r\n    fillControllerElements(fragment, \"todoListController\", di.todoListController(di, todos));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/incomplete-todo-list-controller.ts","import { todoIdDataAttrName } from \"../app.common\";\r\nimport { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\nimport { setAttrElements, templateClone } from \"../utils\";\r\n\r\nexport function todoActionsPanelButtonsController(di: Dependencies, todo: Todo | CompletedTodo): DocumentFragment {\r\n    let fragment = templateClone(\"todoDeleteBtnTemplate\");\r\n    if (!todo.isCompleted) {\r\n        fragment.appendChild(templateClone(\"todoMoveUpBtnTemplate\"));\r\n        fragment.appendChild(templateClone(\"todoMoveDownBtnTemplate\"));\r\n    }\r\n    fragment.appendChild(templateClone(\"todoRenameBtnTemplate\"));\r\n    setAttrElements(fragment, todoIdDataAttrName, todo.id);\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/todo-actions-panel-buttons-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\nimport { fillControllerElements, templateClone } from \"../utils\";\r\nimport { todoTitleController } from \"./todo-title-controller\";\r\n\r\nexport function todoActionsPanelController(di: Dependencies, todo: Todo | CompletedTodo): DocumentFragment {\r\n    let fragment = templateClone(\"todoActionsPanelTemplate\");\r\n    fillControllerElements(fragment, \"todoTitleController\", di.todoTitleController(di, todo));\r\n    fillControllerElements(fragment, \"todoActionsPanelButtonsController\", di.todoActionsPanelButtonsController(di, todo));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/todo-actions-panel-controller.ts","import { todoIdDataAttrName } from \"../app.common\";\r\nimport { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\nimport { fillControllerElements, setAttrElements, templateClone } from \"../utils\";\r\n\r\nexport function todoController(di: Dependencies, todo: Todo | CompletedTodo): DocumentFragment {\r\n    let fragment = (todo.isCompleted)\r\n        ? templateClone(\"completedTodoTemplate\")\r\n        : templateClone(\"todoTemplate\");\r\n    setAttrElements(fragment, todoIdDataAttrName, todo.id);\r\n    fillControllerElements(fragment, \"todoTitlePanelController\", di.todoTitlePanelController(di, todo));\r\n    fillControllerElements(fragment, \"todoActionsPanelController\", di.todoActionsPanelController(di, todo));\r\n    fillControllerElements(fragment, \"todoRenamePanelController\", di.todoRenamePanelController(di, todo));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/todo-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\nimport { fillControllerElements, templateClone } from \"../utils\";\r\n\r\nexport function todoListController(di: Dependencies, todos: (Todo | CompletedTodo)[]): DocumentFragment {\r\n    let fragment = templateClone(\"todoListTemplate\");\r\n    fillControllerElements(fragment, \"todoListGroupController\", di.todoListGroupController(di, todos));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/todo-list-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\n\r\nexport function todoListGroupController(di: Dependencies, todos: (Todo | CompletedTodo)[]): DocumentFragment {\r\n    let fragment = document.createDocumentFragment();\r\n    for (const todo of todos) {\r\n        fragment.appendChild(di.todoController(di, todo));\r\n    }\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/todo-list-group-controller.ts","import { v4 as uuid } from \"uuid\";\r\nimport { todoIdDataAttrName } from \"../app.common\";\r\nimport { Dependencies } from \"../dependencies\";\r\nimport { TodoList } from \"../domain/todo-list\";\r\nimport { AggregateIdType, DomainEvent, domainEventsByAggregate, postDomainEvents } from \"../event-store\";\r\nimport { fillControllerElements, findElement, getRequiredAttribute, templateClone } from \"../utils\";\r\n\r\nexport function todoListPanelController(di: Dependencies, events: DomainEvent[]): DocumentFragment {\r\n    let fragment = templateClone(\"todoListPanelTemplate\");\r\n    let todoList = new TodoList(events);\r\n    let todoListId = todoList.id;\r\n    let $todoListDelegatedEventTarget = $(findElement(fragment, \"#todolistDelegatedEventTarget\"));\r\n    // Need to handle keypress here because the completeTodoBtn is an <a> without an href,\r\n    // so tabbing to it and pressing enter doesn't trigger a click event like it would with a <button>.\r\n    // I want completeTodoBtn to act like a <button>, but it has another <button> inside of it (todoActionsBtn),\r\n    // so browsers and Bootstrap styling wouldn't work if it was a <button> (HTML spec says no interactive content\r\n    // inside interactive content). By using an <a> with no href I get the a.list-group-item Bootstrap styling.\r\n    $todoListDelegatedEventTarget.on(\"click keypress\", \".completeTodoBtn\", e => {\r\n        completeTodoBtnHandler(e, true);\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"click keypress\", \".uncompleteTodoBtn\", e => {\r\n        completeTodoBtnHandler(e, false);\r\n    });\r\n    function completeTodoBtnHandler(e: JQueryEventObject, isComplete: boolean): void {\r\n        // only handle \"enter\" keypresses\r\n        if (e.type === \"keypress\" && e.which !== 13) {\r\n            return;\r\n        }\r\n        // short-circuit if this event has bubbled up from the todoActionsBtn (which is inside (un)complete todo buttons)\r\n        let todoActionsBtn = $(e.currentTarget).find(\".todoActionsBtn\")[0];\r\n        if (todoActionsBtn === e.target || $.contains(todoActionsBtn, e.target)) {\r\n            return;\r\n        }\r\n        commander(e, (list, id) => {\r\n            if (isComplete) {\r\n                list.complete(id, Date.now());\r\n            } else {\r\n                list.uncomplete(id);\r\n            }\r\n        }).catch(console.log);\r\n    }\r\n    $todoListDelegatedEventTarget.on(\"click\", \".moveTodoUpBtn\", e => {\r\n        commander(e, (list, id) => {\r\n            list.changePosition(id, -1);\r\n        }).catch(console.log);\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"click\", \".moveTodoDownBtn\", e => {\r\n        commander(e, (list, id) => {\r\n            list.changePosition(id, 1);\r\n        }).catch(console.log);\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"click\", \".deleteTodoBtn\", e => {\r\n        commander(e, (list, id) => {\r\n            list.remove(id);\r\n        }).catch(console.log);\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"submit\", \".renameTodoForm\", e => {\r\n        e.preventDefault();\r\n        let todoName = $(e.currentTarget).find(\"input[name='name']\").val() as string;\r\n        commander(e, (list, id) => {\r\n            list.rename(id, todoName);\r\n        }).catch(console.log);\r\n    });\r\n    async function commander(e: JQueryEventObject, command: (todoList: TodoList, todoId: string) => void): Promise<void> {\r\n        let refreshEvents = await domainEventsByAggregate(todoListId);\r\n        let refreshTodoList = new TodoList(refreshEvents);\r\n        let todoId = getRequiredAttribute(e.currentTarget, todoIdDataAttrName);\r\n        command(refreshTodoList, todoId);\r\n        await postDomainEvents(refreshTodoList.uncommittedEvents);\r\n        await di.refreshLists(di, todoListId);\r\n    }\r\n    $todoListDelegatedEventTarget.on(\"click\", \".todoActionsBtn\", e => {\r\n        let $defaultPanel = $(e.currentTarget).closest(\".todoPanelDefault\");\r\n        let $actionsPanel = $defaultPanel.next();\r\n        let $bothPanels = $defaultPanel.add($actionsPanel);\r\n        let actionsBtnGroup = $actionsPanel.find(\".todoActionsPanelBtnGroup\")[0];\r\n        let eventNamespace = \"click.todoActionsPanelClose:\" + uuid();\r\n        $bothPanels.toggle();\r\n        // This handler will close (i.e. toggle) the ActionsPanel when the user clicks anywhere in the document outside of the actionsBtnGroup.\r\n        // eventNamespace is unique (probably) so each instance of this handler can only detach itself.\r\n        $(document).on(eventNamespace, closeEvent => {\r\n            // Short-circuit when handler is triggered by event that created it.\r\n            // This happens because this handler is created in the todolistDelegatedEventTarget handler but attached to the document.\r\n            // So, when the todolistDelegatedEventTarget handler returns, the click event that triggered it will still bubble to the document.\r\n            if (e.originalEvent === closeEvent.originalEvent) {\r\n                return;\r\n            }\r\n            if (!$.contains(actionsBtnGroup, closeEvent.target)) {\r\n                $bothPanels.toggle();\r\n            }\r\n            $(document).off(eventNamespace);\r\n        });\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"click\", \".renameTodoBtn\", e => {\r\n        let $actionsPanel = $(e.currentTarget).closest(\".todoActionsPanel\");\r\n        let $renamePanel = $actionsPanel.next();\r\n        $actionsPanel.add($renamePanel).toggle();\r\n        $renamePanel.find(\".renameTodoBtnClickFocusTarget\").first().focus();\r\n    });\r\n    $todoListDelegatedEventTarget.on(\"blur\", \".renameTodoForm\", e => {\r\n        if (!(e.relatedTarget && $.contains(e.currentTarget, e.relatedTarget))) {\r\n            let $renamePanel = $(e.currentTarget).closest(\".todoRenamePanel\");\r\n            $renamePanel.prev().prev().add($renamePanel).toggle();\r\n        }\r\n    });\r\n    fillControllerElements(fragment, \"addTodoFormController\", di.addTodoFormController(di, todoListId));\r\n    fillControllerElements(fragment, \"incompleteTodoListController\", di.incompleteTodoListController(di, todoList.todos));\r\n    fillControllerElements(fragment, \"completedTodoListController\", di.completedTodoListController(di, todoList.completedTodos));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/todo-list-panel-controller.ts","import { invalidNameInputHandler, todoIdDataAttrName } from \"../app.common\";\r\nimport { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\nimport { findElement, setAttrElements, templateClone } from \"../utils\";\r\n\r\nexport function todoRenamePanelController(di: Dependencies, todo: Todo | CompletedTodo): DocumentFragment {\r\n    let fragment = templateClone(\"todoRenamePanelTemplate\");\r\n    let input = findElement(fragment, \"input[name='name']\");\r\n    let inputId = input.getAttribute(\"id\");\r\n    let newInputId = `${inputId}-${todo.id}`;\r\n    let label = findElement(fragment, `label[for='${inputId}']`);\r\n    input.setAttribute(\"id\", newInputId);\r\n    input.setAttribute(\"value\", todo.name);\r\n    label.setAttribute(\"for\", newInputId);\r\n    setAttrElements(fragment, todoIdDataAttrName, todo.id);\r\n    $(input).on(\"invalid\", invalidNameInputHandler);\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/todo-rename-panel-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\nimport { fillContentElements, templateClone } from \"../utils\";\r\n\r\nexport function todoTitleController(di: Dependencies, todo: Todo | CompletedTodo): DocumentFragment {\r\n    let titleFragment = document.createDocumentFragment();\r\n    titleFragment.textContent = todo.name;\r\n    if (todo.isCompleted) {\r\n        let completionDateFragment = templateClone(\"todoCompletionDateTemplate\");\r\n        let date = new Date((todo as CompletedTodo).completionTimestamp);\r\n        fillContentElements(completionDateFragment, \"completionDate\", date.toLocaleDateString());\r\n        titleFragment.appendChild(completionDateFragment);\r\n    }\r\n    return titleFragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/todo-title-controller.ts","import { Dependencies } from \"../dependencies\";\r\nimport { CompletedTodo, Todo } from \"../domain/todo\";\r\nimport { fillControllerElements, templateClone } from \"../utils\";\r\n\r\nexport function todoTitlePanelController(di: Dependencies, todo: Todo | CompletedTodo): DocumentFragment {\r\n    let fragment = templateClone(\"todoTitlePanelTemplate\");\r\n    fillControllerElements(fragment, \"todoTitleController\", di.todoTitleController(di, todo));\r\n    return fragment;\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./controllers/todo-title-panel-controller.ts","'use strict';\n\n(function() {\n  function toArray(arr) {\n    return Array.prototype.slice.call(arr);\n  }\n\n  function promisifyRequest(request) {\n    return new Promise(function(resolve, reject) {\n      request.onsuccess = function() {\n        resolve(request.result);\n      };\n\n      request.onerror = function() {\n        reject(request.error);\n      };\n    });\n  }\n\n  function promisifyRequestCall(obj, method, args) {\n    var request;\n    var p = new Promise(function(resolve, reject) {\n      request = obj[method].apply(obj, args);\n      promisifyRequest(request).then(resolve, reject);\n    });\n\n    p.request = request;\n    return p;\n  }\n\n  function promisifyCursorRequestCall(obj, method, args) {\n    var p = promisifyRequestCall(obj, method, args);\n    return p.then(function(value) {\n      if (!value) return;\n      return new Cursor(value, p.request);\n    });\n  }\n\n  function proxyProperties(ProxyClass, targetProp, properties) {\n    properties.forEach(function(prop) {\n      Object.defineProperty(ProxyClass.prototype, prop, {\n        get: function() {\n          return this[targetProp][prop];\n        },\n        set: function(val) {\n          this[targetProp][prop] = val;\n        }\n      });\n    });\n  }\n\n  function proxyRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function proxyMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return this[targetProp][prop].apply(this[targetProp], arguments);\n      };\n    });\n  }\n\n  function proxyCursorRequestMethods(ProxyClass, targetProp, Constructor, properties) {\n    properties.forEach(function(prop) {\n      if (!(prop in Constructor.prototype)) return;\n      ProxyClass.prototype[prop] = function() {\n        return promisifyCursorRequestCall(this[targetProp], prop, arguments);\n      };\n    });\n  }\n\n  function Index(index) {\n    this._index = index;\n  }\n\n  proxyProperties(Index, '_index', [\n    'name',\n    'keyPath',\n    'multiEntry',\n    'unique'\n  ]);\n\n  proxyRequestMethods(Index, '_index', IDBIndex, [\n    'get',\n    'getKey',\n    'getAll',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(Index, '_index', IDBIndex, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  function Cursor(cursor, request) {\n    this._cursor = cursor;\n    this._request = request;\n  }\n\n  proxyProperties(Cursor, '_cursor', [\n    'direction',\n    'key',\n    'primaryKey',\n    'value'\n  ]);\n\n  proxyRequestMethods(Cursor, '_cursor', IDBCursor, [\n    'update',\n    'delete'\n  ]);\n\n  // proxy 'next' methods\n  ['advance', 'continue', 'continuePrimaryKey'].forEach(function(methodName) {\n    if (!(methodName in IDBCursor.prototype)) return;\n    Cursor.prototype[methodName] = function() {\n      var cursor = this;\n      var args = arguments;\n      return Promise.resolve().then(function() {\n        cursor._cursor[methodName].apply(cursor._cursor, args);\n        return promisifyRequest(cursor._request).then(function(value) {\n          if (!value) return;\n          return new Cursor(value, cursor._request);\n        });\n      });\n    };\n  });\n\n  function ObjectStore(store) {\n    this._store = store;\n  }\n\n  ObjectStore.prototype.createIndex = function() {\n    return new Index(this._store.createIndex.apply(this._store, arguments));\n  };\n\n  ObjectStore.prototype.index = function() {\n    return new Index(this._store.index.apply(this._store, arguments));\n  };\n\n  proxyProperties(ObjectStore, '_store', [\n    'name',\n    'keyPath',\n    'indexNames',\n    'autoIncrement'\n  ]);\n\n  proxyRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'put',\n    'add',\n    'delete',\n    'clear',\n    'get',\n    'getAll',\n    'getKey',\n    'getAllKeys',\n    'count'\n  ]);\n\n  proxyCursorRequestMethods(ObjectStore, '_store', IDBObjectStore, [\n    'openCursor',\n    'openKeyCursor'\n  ]);\n\n  proxyMethods(ObjectStore, '_store', IDBObjectStore, [\n    'deleteIndex'\n  ]);\n\n  function Transaction(idbTransaction) {\n    this._tx = idbTransaction;\n    this.complete = new Promise(function(resolve, reject) {\n      idbTransaction.oncomplete = function() {\n        resolve();\n      };\n      idbTransaction.onerror = function() {\n        reject(idbTransaction.error);\n      };\n      idbTransaction.onabort = function() {\n        reject(idbTransaction.error);\n      };\n    });\n  }\n\n  Transaction.prototype.objectStore = function() {\n    return new ObjectStore(this._tx.objectStore.apply(this._tx, arguments));\n  };\n\n  proxyProperties(Transaction, '_tx', [\n    'objectStoreNames',\n    'mode'\n  ]);\n\n  proxyMethods(Transaction, '_tx', IDBTransaction, [\n    'abort'\n  ]);\n\n  function UpgradeDB(db, oldVersion, transaction) {\n    this._db = db;\n    this.oldVersion = oldVersion;\n    this.transaction = new Transaction(transaction);\n  }\n\n  UpgradeDB.prototype.createObjectStore = function() {\n    return new ObjectStore(this._db.createObjectStore.apply(this._db, arguments));\n  };\n\n  proxyProperties(UpgradeDB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(UpgradeDB, '_db', IDBDatabase, [\n    'deleteObjectStore',\n    'close'\n  ]);\n\n  function DB(db) {\n    this._db = db;\n  }\n\n  DB.prototype.transaction = function() {\n    return new Transaction(this._db.transaction.apply(this._db, arguments));\n  };\n\n  proxyProperties(DB, '_db', [\n    'name',\n    'version',\n    'objectStoreNames'\n  ]);\n\n  proxyMethods(DB, '_db', IDBDatabase, [\n    'close'\n  ]);\n\n  // Add cursor iterators\n  // TODO: remove this once browsers do the right thing with promises\n  ['openCursor', 'openKeyCursor'].forEach(function(funcName) {\n    [ObjectStore, Index].forEach(function(Constructor) {\n      Constructor.prototype[funcName.replace('open', 'iterate')] = function() {\n        var args = toArray(arguments);\n        var callback = args[args.length - 1];\n        var nativeObject = this._store || this._index;\n        var request = nativeObject[funcName].apply(nativeObject, args.slice(0, -1));\n        request.onsuccess = function() {\n          callback(request.result);\n        };\n      };\n    });\n  });\n\n  // polyfill getAll\n  [Index, ObjectStore].forEach(function(Constructor) {\n    if (Constructor.prototype.getAll) return;\n    Constructor.prototype.getAll = function(query, count) {\n      var instance = this;\n      var items = [];\n\n      return new Promise(function(resolve) {\n        instance.iterateCursor(query, function(cursor) {\n          if (!cursor) {\n            resolve(items);\n            return;\n          }\n          items.push(cursor.value);\n\n          if (count !== undefined && items.length == count) {\n            resolve(items);\n            return;\n          }\n          cursor.continue();\n        });\n      });\n    };\n  });\n\n  var exp = {\n    open: function(name, version, upgradeCallback) {\n      var p = promisifyRequestCall(indexedDB, 'open', [name, version]);\n      var request = p.request;\n\n      request.onupgradeneeded = function(event) {\n        if (upgradeCallback) {\n          upgradeCallback(new UpgradeDB(request.result, event.oldVersion, request.transaction));\n        }\n      };\n\n      return p.then(function(db) {\n        return new DB(db);\n      });\n    },\n    delete: function(name) {\n      return promisifyRequestCall(indexedDB, 'deleteDatabase', [name]);\n    }\n  };\n\n  if (typeof module !== 'undefined') {\n    module.exports = exp;\n    module.exports.default = module.exports;\n  }\n  else {\n    self.idb = exp;\n  }\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/idb/lib/idb.js\n// module id = 28\n// module chunks = 0","import { refreshBody, refreshLists } from \"./app.common\";\r\nimport { addTodoFormController } from \"./controllers/add-todo-form-controller\";\r\nimport { bodyController } from \"./controllers/body-controller\";\r\nimport { completedTodoListController } from \"./controllers/completed-todo-list-controller\";\r\nimport { eventListController } from \"./controllers/event-list-controller\";\r\nimport { eventListGroupController } from \"./controllers/event-list-group-controller\";\r\nimport { eventTextController } from \"./controllers/event-text-controller\";\r\nimport { historyTodoController } from \"./controllers/history-todo-controller\";\r\nimport { historyTodoListPanelController } from \"./controllers/history-todo-list-panel-controller\";\r\nimport { historyTodoTitlePanelController } from \"./controllers/history-todo-title-panel-controller\";\r\nimport { incompleteTodoListController } from \"./controllers/incomplete-todo-list-controller\";\r\nimport { todoActionsPanelButtonsController } from \"./controllers/todo-actions-panel-buttons-controller\";\r\nimport { todoActionsPanelController } from \"./controllers/todo-actions-panel-controller\";\r\nimport { todoController } from \"./controllers/todo-controller\";\r\nimport { todoListController } from \"./controllers/todo-list-controller\";\r\nimport { todoListGroupController } from \"./controllers/todo-list-group-controller\";\r\nimport { todoListPanelController } from \"./controllers/todo-list-panel-controller\";\r\nimport { todoRenamePanelController } from \"./controllers/todo-rename-panel-controller\";\r\nimport { todoTitleController } from \"./controllers/todo-title-controller\";\r\nimport { todoTitlePanelController } from \"./controllers/todo-title-panel-controller\";\r\nimport { Dependencies } from \"./dependencies\";\r\nimport { todoListEvents } from \"./read\";\r\nimport \"./site.css\";\r\nimport { fillControllerElements } from \"./utils\";\r\n\r\nif (!window.indexedDB) {\r\n    window.alert(\"Your browser doesn't support IndexedDB (the browser feature this app uses to store your To-dos). Update your browser to its latest version.\");\r\n}\r\n\r\nconst di: Dependencies = {\r\n    bodyController,\r\n    todoListPanelController,\r\n    addTodoFormController,\r\n    incompleteTodoListController,\r\n    completedTodoListController,\r\n    todoListController,\r\n    todoListGroupController,\r\n    todoController,\r\n    todoTitlePanelController,\r\n    todoTitleController,\r\n    todoActionsPanelController,\r\n    todoActionsPanelButtonsController,\r\n    todoRenamePanelController,\r\n    eventListController,\r\n    eventListGroupController,\r\n    eventTextController,\r\n    refreshLists,\r\n    refreshBody,\r\n    historyTodoListPanelController,\r\n    historyTodoController,\r\n    historyTodoTitlePanelController,\r\n};\r\n\r\ntodoListEvents()\r\n    .then(events => {\r\n        fillControllerElements(document, \"bodyController\", di.bodyController(di, events));\r\n    }).catch(console.log);\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./app.ts","import { AggregateIdType, DomainEvent, DomainEventType, UncommittedDomainEvent } from \"../event-store\";\r\n\r\nexport type DomainEventHandler = (e: UncommittedDomainEvent) => void;\r\n\r\nexport abstract class AggregateRoot {\r\n    [key: string]: any;\r\n    private _uncommittedEvents: UncommittedDomainEvent[];\r\n    get uncommittedEvents(): UncommittedDomainEvent[] {\r\n        return this._uncommittedEvents;\r\n    }\r\n    protected _id: AggregateIdType;\r\n    get id(): AggregateIdType {\r\n        return this._id;\r\n    }\r\n    protected init(): void {\r\n        this._uncommittedEvents = new Array<UncommittedDomainEvent>();\r\n    }\r\n    constructor(events: DomainEvent[]) {\r\n        this.init();\r\n        for (const e of events) {\r\n            (this[DomainEventType[e.type]] as DomainEventHandler)(e);\r\n        }\r\n    }\r\n    protected applyAndStage(e: UncommittedDomainEvent): void {\r\n        (this[DomainEventType[e.type]] as DomainEventHandler)(e);\r\n        this._uncommittedEvents.push(e);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./domain/aggregate-root.ts","import { AggregateIdType, DomainEventType, UncommittedDomainEvent } from \"../event-store\";\r\nimport { TodoIdType } from \"./todo\";\r\n\r\nexport class TodoAdded implements UncommittedDomainEvent {\r\n    readonly type = DomainEventType.TodoAdded;\r\n    constructor(\r\n        readonly aggregateId: AggregateIdType,\r\n        readonly todoId: TodoIdType,\r\n        readonly todoName: string,\r\n    ) { }\r\n}\r\n\r\nexport class TodoRemoved implements UncommittedDomainEvent {\r\n    readonly type = DomainEventType.TodoRemoved;\r\n    constructor(\r\n        readonly aggregateId: AggregateIdType,\r\n        readonly todoId: TodoIdType,\r\n    ) { }\r\n}\r\n\r\nexport class TodoCompleted implements UncommittedDomainEvent {\r\n    readonly type = DomainEventType.TodoCompleted;\r\n    constructor(\r\n        readonly aggregateId: AggregateIdType,\r\n        readonly todoId: TodoIdType,\r\n        readonly todoCompletionTimestamp: number,\r\n    ) { }\r\n}\r\n\r\nexport class TodoUncompleted implements UncommittedDomainEvent {\r\n    readonly type = DomainEventType.TodoUncompleted;\r\n    constructor(\r\n        readonly aggregateId: AggregateIdType,\r\n        readonly todoId: TodoIdType,\r\n    ) { }\r\n}\r\n\r\nexport class TodoRenamed implements UncommittedDomainEvent {\r\n    readonly type = DomainEventType.TodoRenamed;\r\n    constructor(\r\n        readonly aggregateId: AggregateIdType,\r\n        readonly todoId: TodoIdType,\r\n        readonly todoName: string,\r\n    ) { }\r\n}\r\n\r\nexport class TodoPositionChanged implements UncommittedDomainEvent {\r\n    readonly type = DomainEventType.TodoPositionChanged;\r\n    constructor(\r\n        readonly aggregateId: AggregateIdType,\r\n        readonly todoId: TodoIdType,\r\n        readonly todoOffset: number,\r\n    ) { }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./domain/events.ts","export type TodoIdType = string;\r\n\r\nexport class Todo {\r\n    readonly isCompleted: boolean = false;\r\n    constructor(\r\n        readonly id: TodoIdType,\r\n        public name: string,\r\n    ) { }\r\n}\r\n\r\nexport class CompletedTodo extends Todo {\r\n    readonly isCompleted: boolean = true;\r\n    constructor(\r\n        id: TodoIdType,\r\n        name: string,\r\n        readonly completionTimestamp: number,\r\n    ) {\r\n        super(id, name);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./~/tslint-loader!./domain/todo.ts","// Unique ID creation requires a high quality random # generator.  We feature\n// detect to determine the best RNG source, normalizing to a function that\n// returns 128-bits of randomness, since that's what's usually required\nvar rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\n// **`v1()` - Generate time-based UUID**\n//\n// Inspired by https://github.com/LiosK/UUID.js\n// and http://docs.python.org/library/uuid.html\n\n// random #'s we need to init node and clockseq\nvar _seedBytes = rng();\n\n// Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)\nvar _nodeId = [\n  _seedBytes[0] | 0x01,\n  _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]\n];\n\n// Per 4.2.2, randomize (14 bit) clockseq\nvar _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;\n\n// Previous uuid creation time\nvar _lastMSecs = 0, _lastNSecs = 0;\n\n// See https://github.com/broofa/node-uuid for API details\nfunction v1(options, buf, offset) {\n  var i = buf && offset || 0;\n  var b = buf || [];\n\n  options = options || {};\n\n  var clockseq = options.clockseq !== undefined ? options.clockseq : _clockseq;\n\n  // UUID timestamps are 100 nano-second units since the Gregorian epoch,\n  // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so\n  // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'\n  // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.\n  var msecs = options.msecs !== undefined ? options.msecs : new Date().getTime();\n\n  // Per 4.2.1.2, use count of uuid's generated during the current clock\n  // cycle to simulate higher resolution clock\n  var nsecs = options.nsecs !== undefined ? options.nsecs : _lastNSecs + 1;\n\n  // Time since last uuid creation (in msecs)\n  var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;\n\n  // Per 4.2.1.2, Bump clockseq on clock regression\n  if (dt < 0 && options.clockseq === undefined) {\n    clockseq = clockseq + 1 & 0x3fff;\n  }\n\n  // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new\n  // time interval\n  if ((dt < 0 || msecs > _lastMSecs) && options.nsecs === undefined) {\n    nsecs = 0;\n  }\n\n  // Per 4.2.1.2 Throw error if too many uuids are requested\n  if (nsecs >= 10000) {\n    throw new Error('uuid.v1(): Can\\'t create more than 10M uuids/sec');\n  }\n\n  _lastMSecs = msecs;\n  _lastNSecs = nsecs;\n  _clockseq = clockseq;\n\n  // Per 4.1.4 - Convert from unix epoch to Gregorian epoch\n  msecs += 12219292800000;\n\n  // `time_low`\n  var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;\n  b[i++] = tl >>> 24 & 0xff;\n  b[i++] = tl >>> 16 & 0xff;\n  b[i++] = tl >>> 8 & 0xff;\n  b[i++] = tl & 0xff;\n\n  // `time_mid`\n  var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;\n  b[i++] = tmh >>> 8 & 0xff;\n  b[i++] = tmh & 0xff;\n\n  // `time_high_and_version`\n  b[i++] = tmh >>> 24 & 0xf | 0x10; // include version\n  b[i++] = tmh >>> 16 & 0xff;\n\n  // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)\n  b[i++] = clockseq >>> 8 | 0x80;\n\n  // `clock_seq_low`\n  b[i++] = clockseq & 0xff;\n\n  // `node`\n  var node = options.node || _nodeId;\n  for (var n = 0; n < 6; ++n) {\n    b[i + n] = node[n];\n  }\n\n  return buf ? buf : bytesToUuid(b);\n}\n\nmodule.exports = v1;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/v1.js\n// module id = 33\n// module chunks = 0","var rng = require('./lib/rng');\nvar bytesToUuid = require('./lib/bytesToUuid');\n\nfunction v4(options, buf, offset) {\n  var i = buf && offset || 0;\n\n  if (typeof(options) == 'string') {\n    buf = options == 'binary' ? new Array(16) : null;\n    options = null;\n  }\n  options = options || {};\n\n  var rnds = options.random || (options.rng || rng)();\n\n  // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n  rnds[6] = (rnds[6] & 0x0f) | 0x40;\n  rnds[8] = (rnds[8] & 0x3f) | 0x80;\n\n  // Copy bytes to buffer, if provided\n  if (buf) {\n    for (var ii = 0; ii < 16; ++ii) {\n      buf[i + ii] = rnds[ii];\n    }\n  }\n\n  return buf || bytesToUuid(rnds);\n}\n\nmodule.exports = v4;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/uuid/v4.js\n// module id = 34\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 35\n// module chunks = 0"],"sourceRoot":""}